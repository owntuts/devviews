"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[1595],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return d}});var r=t(7294);function o(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function a(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){o(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,o=function(e,n){if(null==e)return{};var t,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(o[t]=e[t]);return o}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=r.createContext({}),l=function(e){var n=r.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):a(a({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(s.Provider,{value:n},e.children)},u="mdxType",f={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},b=r.forwardRef((function(e,n){var t=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),b=o,d=u["".concat(s,".").concat(b)]||u[b]||f[b]||i;return t?r.createElement(d,a(a({ref:n},p),{},{components:t})):r.createElement(d,a({ref:n},p))}));function d(e,n){var t=arguments,o=n&&n.mdxType;if("string"==typeof e||o){var i=t.length,a=new Array(i);a[0]=b;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c[u]="string"==typeof e?e:o,a[1]=c;for(var l=2;l<i;l++)a[l]=t[l];return r.createElement.apply(null,a)}return r.createElement.apply(null,t)}b.displayName="MDXCreateElement"},8001:function(e,n,t){t.r(n),t.d(n,{assets:function(){return s},contentTitle:function(){return a},default:function(){return f},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var r=t(3117),o=(t(7294),t(3905));const i={sidebar_position:1e3,sidebar_label:"Block Scope and function scope In PHP",title:"Block Scope and function scope In PHP",slug:"/block-function-scope-in-php",tags:["Basic PHP Interviews"]},a=void 0,c={unversionedId:"php/basic/scope2",id:"php/basic/scope2",title:"Block Scope and function scope In PHP",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/php/basic/scope2.md",sourceDirName:"php/basic",slug:"/block-function-scope-in-php",permalink:"/devviews/interviews/block-function-scope-in-php",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/php/basic/scope2.md",tags:[{label:"Basic PHP Interviews",permalink:"/devviews/interviews/tags/basic-php-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Block Scope and function scope In PHP",title:"Block Scope and function scope In PHP",slug:"/block-function-scope-in-php",tags:["Basic PHP Interviews"]},sidebar:"phpInterviewSidebar",previous:{title:"Scope In PHP",permalink:"/devviews/interviews/scope-in-php"},next:{title:"Session In PHP",permalink:"/devviews/interviews/session-in-php"}},s={},l=[],p={toc:l},u="wrapper";function f(e){let{components:n,...t}=e;return(0,o.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,o.kt)("admonition",{title:"Question:",type:"quest"},(0,o.kt)("p",{parentName:"admonition"},"*",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nIs there function scope & block scopoe in PHP?")),(0,o.kt)("details",null,(0,o.kt)("summary",null,(0,o.kt)("h5",null,"ANSWER:")),(0,o.kt)("p",null,"  ","*",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\nIn PHP, only variables have scope, not functions. However, there is a concept of block scope for conditional statements and loops.\nExample:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},'$globalVar = "This is a global variable.";\n\nif (true) {\n  $blockVar = "This is a block variable.";\n  echo $globalVar; // This will output "This is a global variable."\n  echo $blockVar; // This will output "This is a block variable."\n}\n\necho $globalVar; // This will output "This is a global variable."\necho $blockVar; // This will throw an error: "Notice: Undefined variable: blockVar"\n')),(0,o.kt)("p",null,":::note\nNote that since PHP 7, support for the ",(0,o.kt)("inlineCode",{parentName:"p"},"use")," keyword has been added to create closures with inheritable variables. This allows for variables to be used within a function that are defined outside of it. However, this feature does not create a new scope for variables."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-php"},"$multiplier = 10;\n\n$myClosure = function ($num) use ($multiplier) {\n    return $num * $multiplier;\n};\n\necho $myClosure(5); // Output: 50\n\n")),(0,o.kt)("p",null,":::")))}f.isMDXComponent=!0}}]);