"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[8078],{3905:function(e,t,n){n.d(t,{Zo:function(){return m},kt:function(){return c}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=r.createContext({}),s=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},m=function(e){var t=s(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},b=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,m=l(e,["components","mdxType","originalType","parentName"]),u=s(n),b=a,c=u["".concat(p,".").concat(b)]||u[b]||d[b]||i;return n?r.createElement(c,o(o({ref:t},m),{},{components:n})):r.createElement(c,o({ref:t},m))}));function c(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=b;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[u]="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}b.displayName="MDXCreateElement"},6334:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s}});var r=n(83117),a=(n(67294),n(3905));const i={sidebar_position:3,sidebar_label:"Bubble Sort",title:"Bubble Sort Algorithm",slug:"/bubble-sort-algorithm",tags:["Sort Algorithms"]},o=void 0,l={unversionedId:"algorithms/sort-algorithms/bubble-sort",id:"algorithms/sort-algorithms/bubble-sort",title:"Bubble Sort Algorithm",description:"Problem:",source:"@site/tutorials/algorithms/sort-algorithms/bubble-sort.md",sourceDirName:"algorithms/sort-algorithms",slug:"/bubble-sort-algorithm",permalink:"/devviews/tutorials/bubble-sort-algorithm",draft:!1,tags:[{label:"Sort Algorithms",permalink:"/devviews/tutorials/tags/sort-algorithms"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,sidebar_label:"Bubble Sort",title:"Bubble Sort Algorithm",slug:"/bubble-sort-algorithm",tags:["Sort Algorithms"]},sidebar:"algorithmSidebar",next:{title:"Selection Sort",permalink:"/devviews/tutorials/selection-sort-algorithm"}},p={},s=[{value:"Problem:",id:"problem",level:3},{value:"Concept:",id:"concept",level:3},{value:"Bubble Algorithm Explained",id:"bubble-algorithm-explained",level:3},{value:"Implementation Notes",id:"implementation-notes",level:3},{value:"Implementation Code",id:"implementation-code",level:3}],m={toc:s},u="wrapper";function d(e){let{components:t,...i}=e;return(0,a.kt)(u,(0,r.Z)({},m,i,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h3",{id:"problem"},"Problem:"),(0,a.kt)("admonition",{type:"quest"},(0,a.kt)("mdxAdmonitionTitle",{parentName:"admonition"},"*",(0,a.kt)("strong",{parentName:"mdxAdmonitionTitle"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"),(0,a.kt)("p",{parentName:"admonition"},"Given an array ",(0,a.kt)("inlineCode",{parentName:"p"},"A")," with ",(0,a.kt)("inlineCode",{parentName:"p"},"n - 1")," items in unsorted order. Let's sort the items in descending order?")),(0,a.kt)("h3",{id:"concept"},"Concept:"),(0,a.kt)("p",null,":::tip ","*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"),(0,a.kt)("p",null,"Imagine items in an array is like bubbles. The lightest bubble will float to the top (the end of array)!"),(0,a.kt)("p",null,":::"),(0,a.kt)("h3",{id:"bubble-algorithm-explained"},"Bubble Algorithm Explained"),(0,a.kt)("p",null,"We'll call ",(0,a.kt)("inlineCode",{parentName:"p"},"i")," is ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"phase"))," & ",(0,a.kt)("inlineCode",{parentName:"p"},"j")," is ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"pass"))," (or step)."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"First Phase (i start at n - 1)"),": The pass ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},(0,a.kt)("inlineCode",{parentName:"em"},"j")," runs from ",(0,a.kt)("inlineCode",{parentName:"em"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"em"},"n - 1"))),". On the way, it compares two adjacent items if there's ",(0,a.kt)("inlineCode",{parentName:"p"},"A[j] < A[j+1]"),", it will swap (change) the position of the two items. At the end of the phase, ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"the smallest will bubbles to the end of the array")),"."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{alt:"Bubble Algorithm Explained - phase 1",src:n(76367).Z,width:"721",height:"132"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Second Phase (i = n - 2)"),": Similar to the first phase but the pass  ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},(0,a.kt)("inlineCode",{parentName:"em"},"j")," runs from ",(0,a.kt)("inlineCode",{parentName:"em"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"em"},"n - 2"))),"."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{alt:"Bubble Algorithm Explained - phase 2",src:n(70597).Z,width:"721",height:"132"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Phase #i"),": And so on, at the phase ",(0,a.kt)("inlineCode",{parentName:"p"},"i"),", the pass  ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},(0,a.kt)("inlineCode",{parentName:"em"},"j")," runs from ",(0,a.kt)("inlineCode",{parentName:"em"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"em"},"i"))),"."),(0,a.kt)("p",{parentName:"li"},(0,a.kt)("img",{alt:"Bubble Algorithm Explained - phase 3",src:n(78453).Z,width:"721",height:"132"}))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Last Phase (i = 1)"),": At the last phase,  ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},(0,a.kt)("inlineCode",{parentName:"em"},"j")," runs from ",(0,a.kt)("inlineCode",{parentName:"em"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"em"},"1")," ")),". It compares ",(0,a.kt)("inlineCode",{parentName:"p"},"A[0]")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"A[1]")," -> the algorithm ends!"))),(0,a.kt)("h3",{id:"implementation-notes"},"Implementation Notes"),(0,a.kt)("p",null,"We have two for-loops, "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"one for phase ",(0,a.kt)("inlineCode",{parentName:"li"},"i")," (runs from ",(0,a.kt)("inlineCode",{parentName:"li"},"n - 1")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"1"),"): ",(0,a.kt)("inlineCode",{parentName:"li"},"for (int i = n - 1; i >= 1; i--)")),(0,a.kt)("li",{parentName:"ul"},"one for pass ",(0,a.kt)("inlineCode",{parentName:"li"},"j")," (runs from ",(0,a.kt)("inlineCode",{parentName:"li"},"0")," to ",(0,a.kt)("inlineCode",{parentName:"li"},"i"),"): ",(0,a.kt)("inlineCode",{parentName:"li"},"for (int j = 0; j <= i - i; j++)"))),(0,a.kt)("h3",{id:"implementation-code"},"Implementation Code"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp",metastring:"{3,4}","{3,4}":!0},"void bubbleSort(vector<int> A) {\n  int n = A.size();\n  for (int i = n - 1; i >= 1; i++) { // for-loop of phase i\n    for (int j = 0; j <= i; j++) { // for-loop of pass j\n      if (A[j] < A[j + 1]) {\n        swap(A[j], A[j + 1])\n      }\n    }\n  }\n}\n")))}d.isMDXComponent=!0},76367:function(e,t,n){t.Z=n.p+"assets/images/buble-algo-pass-1-28d566bc1ed9be99d3e1246cdce57472.svg"},70597:function(e,t,n){t.Z=n.p+"assets/images/buble-algo-pass-2-b261f15744b9f6c77bb07afdc77d0f34.svg"},78453:function(e,t,n){t.Z=n.p+"assets/images/buble-algo-pass-i-da189219c6209941e5156eacc9bb8819.svg"}}]);