"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[2964],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return f}});var i=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,i,r=function(e,t){if(null==e)return{};var n,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)n=a[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=i.createContext({}),m=function(e){var t=i.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=m(e.components);return i.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},d=i.forwardRef((function(e,t){var n=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=m(n),d=r,f=u["".concat(s,".").concat(d)]||u[d]||c[d]||a;return n?i.createElement(f,o(o({ref:t},p),{},{components:n})):i.createElement(f,o({ref:t},p))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var a=n.length,o=new Array(a);o[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[u]="string"==typeof e?e:r,o[1]=l;for(var m=2;m<a;m++)o[m]=n[m];return i.createElement.apply(null,o)}return i.createElement.apply(null,n)}d.displayName="MDXCreateElement"},31100:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return m}});var i=n(83117),r=(n(67294),n(3905));const a={sidebar_position:1e3,sidebar_label:"Helm Expression",title:"Helm Expression",tags:["HELM Knowledge"]},o=void 0,l={unversionedId:"helm/hero/expression",id:"helm/hero/expression",title:"Helm Expression",description:"Common Functions in Helm template expressions",source:"@site/docs/helm/hero/expression.md",sourceDirName:"helm/hero",slug:"/helm/hero/expression",permalink:"/devviews/interviews/helm/hero/expression",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/helm/hero/expression.md",tags:[{label:"HELM Knowledge",permalink:"/devviews/interviews/tags/helm-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Helm Expression",title:"Helm Expression",tags:["HELM Knowledge"]},sidebar:"helmInterviewSidebar",previous:{title:"Control Structure",permalink:"/devviews/interviews/helm/hero/control-structure"},next:{title:"Helm Example",permalink:"/devviews/interviews/helm/hero/helm-example"}},s={},m=[],p={toc:m},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,i.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("details",{open:!0},(0,r.kt)("summary",null,(0,r.kt)("h5",null,"Common Functions in Helm template expressions")),(0,r.kt)("p",null,"There are many useful commands and functions that you can use in template expressions in Helm. Here are some examples:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Values }}"),": This command accesses the values passed into the chart. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Values.image.tag }}")," refers to the value of ",(0,r.kt)("inlineCode",{parentName:"li"},"image.tag")," in the ",(0,r.kt)("inlineCode",{parentName:"li"},"values.yaml")," file."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Release }}"),": This command provides information about the release. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Release.Name }}")," refers to the name of the release, and ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Release.Namespace }}")," refers to the namespace of the release."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Chart }}"),": This command provides information about the chart. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Chart.Name }}")," refers to the name of the chart, and ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Chart.Version }}")," refers to the version of the chart."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Files }}"),": This command provides access to files in the chart. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},'{{ .Files.Get "config.toml" }}')," reads the file ",(0,r.kt)("inlineCode",{parentName:"li"},"config.toml")," in the chart and returns its contents as a string."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Capabilities }}"),": This command provides information about the capabilities of Kubernetes cluster. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},'{{ .Capabilities.APIVersions.Has "apps/v1" }}')," returns true if the cluster supports the API version ",(0,r.kt)("inlineCode",{parentName:"li"},"apps/v1"),"."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Template }}"),": This command provides information about the current template. For example, ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Template.Name }}")," refers to the name of the template file, and ",(0,r.kt)("inlineCode",{parentName:"li"},"{{ .Template.BasePath }}")," refers to the base path of the template file."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'{{ include "subchart1.labels" . }}'),": This function includes another template file and passes it a context. For example, this function includes the template defined in file ",(0,r.kt)("inlineCode",{parentName:"li"},"templates/_helpers.tpl")," from the subchart named ",(0,r.kt)("inlineCode",{parentName:"li"},"subchart1")," and passes it the current context (",(0,r.kt)("inlineCode",{parentName:"li"},"."),", which is a dot)."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ toYaml .Values | indent 2 }}"),": This function converts a value to YAML format and indents it by 2 spaces. For example, this function converts the values in ",(0,r.kt)("inlineCode",{parentName:"li"},".Values")," to YAML and indents them by 2 spaces."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},'{{ default "foo" .Values.bar }}'),": This function returns a default value if a value is empty. For example, this function returns ",(0,r.kt)("inlineCode",{parentName:"li"},'"foo"')," if ",(0,r.kt)("inlineCode",{parentName:"li"},".Values.bar")," is empty or undefined."),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("inlineCode",{parentName:"li"},"{{ quote .Values.name }}"),": This function wraps a value in double quotes. For example, this function returns ",(0,r.kt)("inlineCode",{parentName:"li"},'"Alice"')," if ",(0,r.kt)("inlineCode",{parentName:"li"},".Values.name")," is ",(0,r.kt)("inlineCode",{parentName:"li"},"Alice"),".")),(0,r.kt)("p",null,"You can learn more about commands and functions in template expressions in the Helm documentation.")))}c.isMDXComponent=!0}}]);