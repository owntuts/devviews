"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[8138],{3905:function(e,t,r){r.d(t,{Zo:function(){return l},kt:function(){return b}});var n=r(7294);function s(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function a(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){s(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,n,s=function(e,t){if(null==e)return{};var r,n,s={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(s[r]=e[r]);return s}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(s[r]=e[r])}return s}var u=n.createContext({}),c=function(e){var t=n.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):a(a({},t),e)),r},l=function(e){var t=c(e.components);return n.createElement(u.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},f=n.forwardRef((function(e,t){var r=e.components,s=e.mdxType,o=e.originalType,u=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=c(r),f=s,b=p["".concat(u,".").concat(f)]||p[f]||d[f]||o;return r?n.createElement(b,a(a({ref:t},l),{},{components:r})):n.createElement(b,a({ref:t},l))}));function b(e,t){var r=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var o=r.length,a=new Array(o);a[0]=f;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[p]="string"==typeof e?e:s,a[1]=i;for(var c=2;c<o;c++)a[c]=r[c];return n.createElement.apply(null,a)}return n.createElement.apply(null,r)}f.displayName="MDXCreateElement"},1152:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return o},metadata:function(){return i},toc:function(){return c}});var n=r(3117),s=(r(7294),r(3905));const o={sidebar_position:1e3,sidebar_label:"Kubernetes Resources",title:"Kubernetes Resources",tags:["Kubernetes Knowledge"]},a=void 0,i={unversionedId:"kubernetes/hero/resources",id:"kubernetes/hero/resources",title:"Kubernetes Resources",description:"Kubernetes Resources",source:"@site/docs/kubernetes/hero/resources.md",sourceDirName:"kubernetes/hero",slug:"/kubernetes/hero/resources",permalink:"/devviews/interviews/kubernetes/hero/resources",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/kubernetes/hero/resources.md",tags:[{label:"Kubernetes Knowledge",permalink:"/devviews/interviews/tags/kubernetes-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Kubernetes Resources",title:"Kubernetes Resources",tags:["Kubernetes Knowledge"]},sidebar:"kubernetesInterviewSidebar",previous:{title:"Kubernetes Manifest",permalink:"/devviews/interviews/kubernetes/hero/manifest"},next:{title:"Kubernetes Workload Resources",permalink:"/devviews/interviews/kubernetes/hero/workload-resources"}},u={},c=[],l={toc:c},p="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("details",{open:!0},(0,s.kt)("summary",null,(0,s.kt)("h5",null,"Kubernetes Resources")),(0,s.kt)("p",null,"Kubernetes resource types are the kinds of objects that you can create and manage in a Kubernetes cluster. There are two main categories of resource types: workloads and services. "),(0,s.kt)("ol",null,(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Workloads")," are the resources that run your applications, such as ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"pods, deployments, replica sets, stateful sets, daemon sets, jobs, and cron jobs")),". "),(0,s.kt)("li",{parentName:"ol"},(0,s.kt)("strong",{parentName:"li"},"Services")," are the resources that expose your applications to the network, such as ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"services, ingresses, and network policies")),". "),(0,s.kt)("li",{parentName:"ol"},"In addition to these core resource types, there are also other resource types that support various aspects of cluster management, such as ",(0,s.kt)("strong",{parentName:"li"},(0,s.kt)("em",{parentName:"strong"},"config maps, secrets, persistent volumes, persistent volume claims, service accounts, roles, role bindings, cluster roles, cluster role bindings, and custom resource definitions")),".")),(0,s.kt)("p",null,"Each resource type has a specific structure and behavior that defines its state and functionality. You can use the Kubernetes API or the kubectl command-line tool to create, update, delete, and query these resources. You can also use configuration files to specify the desired state of your resources declaratively.")))}d.isMDXComponent=!0}}]);