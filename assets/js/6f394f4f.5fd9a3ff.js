"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[8612],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return d}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),p=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},g={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),m=p(n),d=r,u=m["".concat(s,".").concat(d)]||m[d]||g[d]||i;return n?a.createElement(u,o(o({ref:t},c),{},{components:n})):a.createElement(u,o({ref:t},c))}));function d(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=m;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},5560:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return s},metadata:function(){return p},toc:function(){return c},default:function(){return m}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=["components"],l={sidebar_position:1e3,sidebar_label:"Change Detection Strategy",title:"Change Detection Strategy in Angular",slug:"/change-detection-strategy",tags:["Middle Angular Interviews"]},s=void 0,p={unversionedId:"js/angular-interviews/middle/change-detection-strategy",id:"js/angular-interviews/middle/change-detection-strategy",title:"Change Detection Strategy in Angular",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/js/angular-interviews/middle/change-detection-strategy.md",sourceDirName:"js/angular-interviews/middle",slug:"/change-detection-strategy",permalink:"/devviews/interviews/change-detection-strategy",editUrl:"https://github.com/owntuts/devviews/edit/main/docs/js/angular-interviews/middle/change-detection-strategy.md",tags:[{label:"Middle Angular Interviews",permalink:"/devviews/interviews/tags/middle-angular-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Change Detection Strategy",title:"Change Detection Strategy in Angular",slug:"/change-detection-strategy",tags:["Middle Angular Interviews"]},sidebar:"jsInterviewSidebar",previous:{title:"Angular Form",permalink:"/devviews/interviews/template-driven-vs-reactive-forms-angular"},next:{title:"providedIn Type",permalink:"/devviews/interviews/providedin-eagerlyimportedmodule-vs-lazyloadedmodule-vs-root"}},c=[{value:"1. <code>ChangeDetectionStrategy.Default</code> (dirty checking):",id:"1-changedetectionstrategydefault-dirty-checking",children:[],level:3},{value:"Example",id:"example",children:[],level:3},{value:"<code>ChangeDetectionStrategy.OnPush</code>:",id:"changedetectionstrategyonpush",children:[],level:3}],g={toc:c};function m(e){var t=e.components,l=(0,r.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},g,l,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"admonition admonition-quest alert alert--alert"},(0,i.kt)("div",{parentName:"div",className:"admonition-heading"},(0,i.kt)("h5",{parentName:"div"},(0,i.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,i.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},(0,i.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M 13.648438 2.339844 C 10.527344 -0.78125 5.464844 -0.78125 2.339844 2.339844 C -0.78125 5.464844 -0.78125 10.527344 2.339844 13.648438 C 5.464844 16.769531 10.527344 16.769531 13.648438 13.648438 C 16.769531 10.527344 16.769531 5.464844 13.648438 2.339844 Z M 7.515625 14.148438 C 6.824219 14.148438 6.320312 13.625 6.320312 12.902344 C 6.320312 12.171875 6.832031 11.644531 7.53125 11.644531 C 8.234375 11.644531 8.722656 12.160156 8.722656 12.902344 C 8.722656 13.636719 8.226562 14.148438 7.515625 14.148438 Z M 9.316406 7.644531 C 8.609375 8.480469 8.328125 9.199219 8.378906 10.042969 L 8.394531 10.46875 C 8.398438 10.480469 8.398438 10.488281 8.398438 10.5 C 8.398438 10.597656 8.320312 10.679688 8.21875 10.679688 L 6.878906 10.679688 C 6.785156 10.679688 6.707031 10.609375 6.699219 10.515625 L 6.667969 10.066406 C 6.550781 9.03125 6.921875 7.988281 7.769531 6.96875 C 8.507812 6.105469 8.929688 5.460938 8.929688 4.734375 C 8.929688 3.910156 8.414062 3.449219 7.476562 3.433594 C 6.898438 3.433594 6.242188 3.632812 5.855469 3.929688 C 5.808594 3.964844 5.75 3.976562 5.695312 3.960938 C 5.640625 3.945312 5.597656 3.90625 5.578125 3.851562 L 5.167969 2.769531 C 5.136719 2.695312 5.164062 2.609375 5.226562 2.5625 C 5.832031 2.125 6.835938 1.839844 7.789062 1.839844 C 9.890625 1.839844 10.835938 3.199219 10.835938 4.542969 C 10.835938 5.746094 10.175781 6.625 9.316406 7.644531 Z M 9.316406 7.644531 "}))),"Question:")),(0,i.kt)("div",{parentName:"div",className:"admonition-content"},(0,i.kt)("p",{parentName:"div"},"*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nWhat is ",(0,i.kt)("strong",{parentName:"p"},"Change Detection Strategy")," in Angular? ",(0,i.kt)("inlineCode",{parentName:"p"},"ChangeDetectionStrategy.Default")," vs ",(0,i.kt)("inlineCode",{parentName:"p"},"ChangeDetectionStrategy.OnPush"),"?"))),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h5",null,"ANSWER:")),(0,i.kt)("p",null,"  ","*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\n",(0,i.kt)("strong",{parentName:"p"},"Change detection")," means updating the DOM whenever there's something cause data changed in Angular. Such as: ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"DOM events (click, hover,...)")),", ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"AJAX requests")),", ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Timers (setTimers, setInterval)")),",...\nAngular runs the change detection by starting from the top and continuing until it reaches the bottom."),(0,i.kt)("p",null,"  ",(0,i.kt)("img",{alt:"Angular change detection",src:n(5943).Z})),(0,i.kt)("p",null,"  There's two types of ",(0,i.kt)("strong",{parentName:"p"},"change detection"),":"),(0,i.kt)("h3",{id:"1-changedetectionstrategydefault-dirty-checking"},"1. ",(0,i.kt)("inlineCode",{parentName:"h3"},"ChangeDetectionStrategy.Default")," (dirty checking):"),(0,i.kt)("p",null,"  Angular has to be conservative and will checks every time something may have changed:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Triggers (What will trigger the change detection in Default Strategy)"),": Angular will perform checks for each ",(0,i.kt)("strong",{parentName:"li"},"browser events"),", ",(0,i.kt)("strong",{parentName:"li"},"timers"),", ",(0,i.kt)("strong",{parentName:"li"},"XHRs")," and ",(0,i.kt)("strong",{parentName:"li"},"promises")," and ",(0,i.kt)("strong",{parentName:"li"},"the triggers of OnPush")," (see below)."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"Update Decision"),": Default strategy will updates the DOM based on value changes.")),(0,i.kt)("h3",{id:"example"},"Example"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{3} title="fullname.component.ts"',"{3}":!0,title:'"fullname.component.ts"'},"@Component({\n  selector: 'fullname',\n  changeDetection: ChangeDetectionStrategy.Default, // by default no need to add this line\n  template: `\n    <p>Hello {{person.firstName}} {{person.lastName}}</p>\n  `\n})\nexport class FullName {\n  @Input() person;\n}\n")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{17,19} title="app.component.ts"',"{17,19}":!0,title:'"app.component.ts"'},"@Component({\n  selector: 'app',\n  template: `\n    <button (click)='onChange(\"Loe\")'>Change Name<button>\n    <fullname [person]='p' />\n  `\n})\nexport class AppComponent implememnts OnInit {\n  p: any;\n  ngOnInit() {\n    this.p = {\n      firstName: 'John',\n      lastname: 'Doe'\n    }\n  }\n\n  // `onClick` will trigger the change detection.\n  onChange(newName: string) {\n    // changing value of object will update the view\n    this.p.lastname = newName;\n  }\n}\n")),(0,i.kt)("h3",{id:"changedetectionstrategyonpush"},(0,i.kt)("inlineCode",{parentName:"h3"},"ChangeDetectionStrategy.OnPush"),":"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Triggers (What will trigger the change detection in OnPush Strategy)"),": only depend on the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"component\u2019s inputs")),", ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"events")),", ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"markForCheck method")),", or the use of the ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"async pipe"))," in the template, to perform a change detection mechanism and update the view.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Update Decision"),": ",(0,i.kt)("inlineCode",{parentName:"p"},"OnPush")," strategy will updates the view based on reference not value: "),(0,i.kt)("h3",{parentName:"li",id:"example-1"},"Example"),(0,i.kt)("p",{parentName:"li"},"As the example above")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("inlineCode",{parentName:"p"},"onClick")," will trigger the change detection.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"Changing value of object (",(0,i.kt)("inlineCode",{parentName:"p"},"this.p.lastname = newName"),") will not update the view.")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},"But change the object reference: ",(0,i.kt)("inlineCode",{parentName:"p"},"this.p = {/*another object*/}")," -> run change detection & update the view.")))))}m.isMDXComponent=!0},5943:function(e,t,n){t.Z=n.p+"assets/images/change-detection-a8e1016870200ea5b13f2f2e53ce5a47.png"}}]);