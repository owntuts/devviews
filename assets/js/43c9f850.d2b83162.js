"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[5816],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),m=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=m(e.components);return r.createElement(s.Provider,{value:t},e.children)},p="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=m(n),d=a,f=p["".concat(s,".").concat(d)]||p[d]||u[d]||o;return n?r.createElement(f,i(i({ref:t},c),{},{components:n})):r.createElement(f,i({ref:t},c))}));function f(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var m=2;m<o;m++)i[m]=n[m];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},34134:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return i},default:function(){return u},frontMatter:function(){return o},metadata:function(){return l},toc:function(){return m}});var r=n(83117),a=(n(67294),n(3905));const o={sidebar_position:1e3,sidebar_label:"Helm some commands.md",title:"Helm some commands.md",tags:["HELM Knowledge"]},i=void 0,l={unversionedId:"helm/hero/some-commands",id:"helm/hero/some-commands",title:"Helm some commands.md",description:"Some Commands",source:"@site/docs/helm/hero/some-commands.md",sourceDirName:"helm/hero",slug:"/helm/hero/some-commands",permalink:"/devviews/interviews/helm/hero/some-commands",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/helm/hero/some-commands.md",tags:[{label:"HELM Knowledge",permalink:"/devviews/interviews/tags/helm-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Helm some commands.md",title:"Helm some commands.md",tags:["HELM Knowledge"]},sidebar:"helmInterviewSidebar",previous:{title:"Helm Example",permalink:"/devviews/interviews/helm/hero/helm-example"}},s={},m=[],c={toc:m},p="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h5",null,"Some Commands")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm install [NAME] [CHART] [flags]"),": This command installs a chart archive."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm upgrade [RELEASE] [CHART] [flags]"),": This command upgrades a release to a new version of a chart."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm list [flags]"),": This command lists all releases."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm rollback [RELEASE] [REVISION] [flags]"),": This command rolls back a release to a previous revision."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm uninstall [RELEASE] [flags]"),": This command uninstalls a release."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm repo add [NAME] [URL] [flags]"),": This command adds a chart repository."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm repo update"),": This command updates information of available charts locally from chart repositories."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"helm search repo [KEYWORD] [flags]"),": This command searches for charts in the repositories from the repositories file.")),(0,a.kt)("p",null,":::note"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A ",(0,a.kt)("strong",{parentName:"p"},"chart")," is a package of pre-configured Kubernetes resources. It ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"contains all of the resource definitions necessary to run an application, tool, or service inside of a Kubernetes cluster")),". Charts are created as files laid out in a particular directory tree and can ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"be packaged into versioned archives"))," to be deployed.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A ",(0,a.kt)("strong",{parentName:"p"},"release")," is ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"an instance of a chart"))," running in a Kubernetes cluster. One chart can often be installed many times into the same cluster. And each time it is installed, a new release is created.")),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},"A ",(0,a.kt)("strong",{parentName:"p"},"repository")," (or ",(0,a.kt)("strong",{parentName:"p"},"repo"),") is the place where charts can be collected and shared. It's like a package manager for Helm charts. Repositories can be public or private and can be added to Helm to make the charts they contain available for installation."))),(0,a.kt)("p",null,":::")))}u.isMDXComponent=!0}}]);