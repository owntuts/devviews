"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[751],{3905:function(e,t,r){r.d(t,{Zo:function(){return d},kt:function(){return h}});var n=r(67294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function o(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,n)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?o(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):o(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,n,a=function(e,t){if(null==e)return{};var r,n,a={},o=Object.keys(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(n=0;n<o.length;n++)r=o[n],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=n.createContext({}),c=function(e){var t=n.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},d=function(e){var t=c(e.components);return n.createElement(l.Provider,{value:t},e.children)},u="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},p=n.forwardRef((function(e,t){var r=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,d=s(e,["components","mdxType","originalType","parentName"]),u=c(r),p=a,h=u["".concat(l,".").concat(p)]||u[p]||m[p]||o;return r?n.createElement(h,i(i({ref:t},d),{},{components:r})):n.createElement(h,i({ref:t},d))}));function h(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=r.length,i=new Array(o);i[0]=p;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[u]="string"==typeof e?e:a,i[1]=s;for(var c=2;c<o;c++)i[c]=r[c];return n.createElement.apply(null,i)}return n.createElement.apply(null,r)}p.displayName="MDXCreateElement"},54724:function(e,t,r){r.r(t),r.d(t,{assets:function(){return l},contentTitle:function(){return i},default:function(){return m},frontMatter:function(){return o},metadata:function(){return s},toc:function(){return c}});var n=r(83117),a=(r(67294),r(3905));const o={sidebar_position:3,id:"network-design",sidebar_label:"Network Design",title:"Network Design"},i=void 0,s={unversionedId:"system-design/network-design",id:"system-design/network-design",title:"Network Design",description:"Distributed vs Decentralize Architecture",source:"@site/docs/system-design/50.network-design.md",sourceDirName:"system-design",slug:"/system-design/network-design",permalink:"/devviews/interviews/system-design/network-design",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/system-design/50.network-design.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"network-design",sidebar_label:"Network Design",title:"Network Design"},sidebar:"designSystemInterviewSidebar",previous:{title:"Architectures",permalink:"/devviews/interviews/system-design/architectures"},next:{title:"security",permalink:"/devviews/interviews/system-design/security"}},l={},c=[],d={toc:c},u="wrapper";function m(e){let{components:t,...r}=e;return(0,a.kt)(u,(0,n.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("details",{open:!0},(0,a.kt)("summary",null,(0,a.kt)("h5",null,"Distributed vs Decentralize Architecture")),(0,a.kt)("p",null,"Distributed and decentralized architectures are both types of network designs that differ from centralized architectures. "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"A centralized architecture")," is where all the nodes or components of the system are connected to and ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("em",{parentName:"strong"},"controlled by a single central"))," node or server. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"A distributed architecture")," is where the nodes or components of the system are ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("em",{parentName:"strong"},"located on different machines or networks")),", and communicate with each other to achieve a common goal. "),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"A decentralized architecture")," is where the nodes or components of the system are ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("em",{parentName:"strong"},"independent and autonomous")),", and ",(0,a.kt)("strong",{parentName:"li"},(0,a.kt)("em",{parentName:"strong"},"do not rely on a central"))," node or server to coordinate their actions.")),(0,a.kt)("p",null,"Some of the differences between distributed and decentralized architectures are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Control"),": In a distributed architecture, there may still be some level of control or hierarchy among the nodes, such as a master-slave or client-server relationship. In a decentralized architecture, there is no central authority or leader among the nodes, and they operate on a peer-to-peer basis."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Communication"),": In a distributed architecture, the communication among the nodes may be synchronous or asynchronous, depending on the protocol or algorithm used. In a decentralized architecture, the communication among the nodes is usually asynchronous and event-driven, based on messages or events."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Consistency"),": In a distributed architecture, the consistency of the data or state among the nodes may vary, depending on the trade-off between availability and partition tolerance. In a decentralized architecture, the consistency of the data or state among the nodes is usually eventual or probabilistic, based on consensus mechanisms.")),(0,a.kt)("p",null,"Some of the advantages of distributed and ",(0,a.kt)("strong",{parentName:"p"},"decentralized architectures over centralized architectures")," are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Scalability"),": Distributed and decentralized architectures can scale up or down the resources according to the demand or load of the system, improving the performance and availability of the system."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Fault tolerance"),": Distributed and decentralized architectures can tolerate failures or errors in some nodes, without compromising the functionality or reliability of the system."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Diversity"),": Distributed and decentralized architectures can use different technologies or platforms that suit their specific needs or preferences, enabling innovation and flexibility.")),(0,a.kt)("p",null,"Some of the challenges of ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"distributed and decentralized architectures compared to centralized architectures"))," are:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Complexity"),": Distributed and decentralized architectures are more complex to design, develop, test, and maintain than centralized architectures, requiring more coordination and synchronization among nodes."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Security"),": Distributed and decentralized architectures are more vulnerable to attacks or breaches than centralized architectures, requiring more protection and encryption of the data and communication."),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("strong",{parentName:"li"},"Latency"),": Distributed and decentralized architectures may have higher latency or delay than centralized architectures, due to network congestion or failures.")),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Aspect"),(0,a.kt)("th",{parentName:"tr",align:null},"Distributed"),(0,a.kt)("th",{parentName:"tr",align:null},"Decentralized"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Control"),(0,a.kt)("td",{parentName:"tr",align:null},"Some level of control or hierarchy among nodes"),(0,a.kt)("td",{parentName:"tr",align:null},"No central authority or leader among nodes")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Communication"),(0,a.kt)("td",{parentName:"tr",align:null},"Synchronous or asynchronous, depending on protocol or algorithm"),(0,a.kt)("td",{parentName:"tr",align:null},"Asynchronous and event-driven, based on messages or events")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Consistency"),(0,a.kt)("td",{parentName:"tr",align:null},"Varies, depending on trade-off between availability and partition tolerance"),(0,a.kt)("td",{parentName:"tr",align:null},"Eventual or probabilistic, based on consensus mechanisms"))))),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h5",null,"Examples of distributed and decentralized architectures")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Distributed architectures"),": These are architectures where the nodes or components of the system are located on different machines or networks, and communicate with each other to achieve a common goal. Some examples are:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Distributed databases: These are databases that split the data into parts and store them on different nodes for faster access and scalability. For example, MongoDB, Cassandra, HBase, etc."),(0,a.kt)("li",{parentName:"ul"},"Distributed computing: These are computing systems that use multiple nodes to perform parallel or distributed processing of large-scale tasks or problems. For example, MapReduce, Spark, Hadoop, etc."),(0,a.kt)("li",{parentName:"ul"},"Distributed file systems: These are file systems that store files across multiple nodes for high availability and fault tolerance. For example, HDFS, Ceph, GlusterFS, etc."))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},"Decentralized architectures"),": These are architectures where the nodes or components of the system are independent and autonomous, and do not rely on a central node or server to coordinate their actions. Some examples are:"),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"Peer-to-peer networks: These are networks where the nodes communicate and share resources directly with each other, without intermediaries or central servers. For example, BitTorrent, Tor, IPFS, etc."),(0,a.kt)("li",{parentName:"ul"},"Blockchain networks: These are networks where the nodes maintain a shared and immutable ledger of transactions or data, using consensus mechanisms and cryptography. For example, Bitcoin, Ethereum, Cardano, etc."),(0,a.kt)("li",{parentName:"ul"},"Decentralized applications: These are applications that run on blockchain networks or peer-to-peer networks, without centralized servers or authorities. For example, Uniswap, Compound, Brave, etc."))))))}m.isMDXComponent=!0}}]);