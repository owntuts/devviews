"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[756,3082,5338],{3905:function(e,t,o){o.d(t,{Zo:function(){return l},kt:function(){return k}});var n=o(7294);function s(e,t,o){return t in e?Object.defineProperty(e,t,{value:o,enumerable:!0,configurable:!0,writable:!0}):e[t]=o,e}function r(e,t){var o=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),o.push.apply(o,n)}return o}function a(e){for(var t=1;t<arguments.length;t++){var o=null!=arguments[t]?arguments[t]:{};t%2?r(Object(o),!0).forEach((function(t){s(e,t,o[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(o)):r(Object(o)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(o,t))}))}return e}function i(e,t){if(null==e)return{};var o,n,s=function(e,t){if(null==e)return{};var o,n,s={},r=Object.keys(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||(s[o]=e[o]);return s}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(n=0;n<r.length;n++)o=r[n],t.indexOf(o)>=0||Object.prototype.propertyIsEnumerable.call(e,o)&&(s[o]=e[o])}return s}var c=n.createContext({}),m=function(e){var t=n.useContext(c),o=t;return e&&(o="function"==typeof e?e(t):a(a({},t),e)),o},l=function(e){var t=m(e.components);return n.createElement(c.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},u=n.forwardRef((function(e,t){var o=e.components,s=e.mdxType,r=e.originalType,c=e.parentName,l=i(e,["components","mdxType","originalType","parentName"]),p=m(o),u=s,k=p["".concat(c,".").concat(u)]||p[u]||d[u]||r;return o?n.createElement(k,a(a({ref:t},l),{},{components:o})):n.createElement(k,a({ref:t},l))}));function k(e,t){var o=arguments,s=t&&t.mdxType;if("string"==typeof e||s){var r=o.length,a=new Array(r);a[0]=u;var i={};for(var c in t)hasOwnProperty.call(t,c)&&(i[c]=t[c]);i.originalType=e,i[p]="string"==typeof e?e:s,a[1]=i;for(var m=2;m<r;m++)a[m]=o[m];return n.createElement.apply(null,a)}return n.createElement.apply(null,o)}u.displayName="MDXCreateElement"},4312:function(e,t,o){o.d(t,{ZP:function(){return i}});var n=o(3117),s=(o(7294),o(3905));const r={toc:[]},a="wrapper";function i(e){let{components:t,...o}=e;return(0,s.kt)(a,(0,n.Z)({},r,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("div",{className:"interview"},o.level&&(0,s.kt)("span",{className:"level"},o.level),o.children))}i.isMDXComponent=!0},4932:function(e,t,o){o.r(t),o.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return r},metadata:function(){return i},toc:function(){return m}});var n=o(3117),s=(o(7294),o(3905));const r={sidebar_position:1e3,sidebar_label:"Socket.IO How It Works",title:"Socket.IO How It Works",tags:["Socket.IO Knowledge"]},a=void 0,i={unversionedId:"socketio/hero/howitworks",id:"socketio/hero/howitworks",title:"Socket.IO How It Works",description:"Socket.IO How It Works",source:"@site/docs/socketio/hero/howitworks.md",sourceDirName:"socketio/hero",slug:"/socketio/hero/howitworks",permalink:"/devviews/interviews/socketio/hero/howitworks",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/socketio/hero/howitworks.md",tags:[{label:"Socket.IO Knowledge",permalink:"/devviews/interviews/tags/socket-io-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Socket.IO How It Works",title:"Socket.IO How It Works",tags:["Socket.IO Knowledge"]},sidebar:"socketioInterviewSidebar",next:{title:"Namespace and Rooms",permalink:"/devviews/interviews/socketio/hero/namespaces-rooms"}},c={},m=[{value:"Examples",id:"examples",level:4}],l={toc:m},p="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("details",{open:!0},(0,s.kt)("summary",null,(0,s.kt)("h5",null,"Socket.IO How It Works")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Socket.IO How It Works",src:o(3126).Z,width:"688",height:"331"})),(0,s.kt)("p",null,"Socket.io is a library that enables real-time, bidirectional and event-based communication between the client (",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"socket")),") and the server (",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"io")),"). It works by establishing a WebSocket connection whenever possible, and using HTTP long-polling as a fallback. Socket.io attaches to an instance of http.Server and adds handlers to it. It does not listen to a network port on its own; it simply adds socket.io-specific handlers to an existing HTTP server. Socket.io also provides additional features over a plain WebSocket object, such as ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"namespaces")),", ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"rooms")),", ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"acknowledgements"))," and ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"broadcasting")),"."),(0,s.kt)("h4",{id:"examples"},"Examples"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-js",metastring:'title="server.js"',title:'"server.js"'},"var app = require('http').createServer(handler);\nvar io = require('socket.io')(app);\n\napp.listen(3000);\n\nio.on('connection', function(socket) {\n  console.log('a user connected');\n  socket.on('chat message', function(message) {\n    console.log('message: ' + message);\n    io.emit('chat message', message);\n  });\n});\n\n\n")),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-html",metastring:'title="index.html"',title:'"index.html"'},"<script>\n  var socket = io('http://localhost:3000');\n  var input = document.getElementById('input');\n  var button = document.getElementById('button');\n\n  button.addEventListener('click', function() {\n    var message = input.value;\n    socket.emit('chat message', message);\n    input.value = '';\n  });\n<\/script>\n\n"))))}d.isMDXComponent=!0},5773:function(e,t,o){o.r(t),o.d(t,{assets:function(){return c},contentTitle:function(){return a},default:function(){return d},frontMatter:function(){return r},metadata:function(){return i},toc:function(){return m}});var n=o(3117),s=(o(7294),o(3905));const r={sidebar_position:1e3,sidebar_label:"Namespace and Rooms",title:"Namespace and Rooms",tags:["Socket.IO Knowledge"]},a=void 0,i={unversionedId:"socketio/hero/namespaces-rooms",id:"socketio/hero/namespaces-rooms",title:"Namespace and Rooms",description:"Namespace and Rooms",source:"@site/docs/socketio/hero/namespaces-rooms.md",sourceDirName:"socketio/hero",slug:"/socketio/hero/namespaces-rooms",permalink:"/devviews/interviews/socketio/hero/namespaces-rooms",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/socketio/hero/namespaces-rooms.md",tags:[{label:"Socket.IO Knowledge",permalink:"/devviews/interviews/tags/socket-io-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Namespace and Rooms",title:"Namespace and Rooms",tags:["Socket.IO Knowledge"]},sidebar:"socketioInterviewSidebar",previous:{title:"Socket.IO How It Works",permalink:"/devviews/interviews/socketio/hero/howitworks"},next:{title:"Socket.IO Zero To Hero",permalink:"/devviews/interviews/socketio/socketio-zero-to-hero"}},c={},m=[],l={toc:m},p="wrapper";function d(e){let{components:t,...r}=e;return(0,s.kt)(p,(0,n.Z)({},l,r,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("details",{open:!0},(0,s.kt)("summary",null,(0,s.kt)("h5",null,"Namespace and Rooms")),(0,s.kt)("p",null,(0,s.kt)("img",{alt:"Namespace and Rooms",src:o(8716).Z,width:"647",height:"596"})),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Namespaces")," are a way to split the logic of your application over a single shared connection. ",(0,s.kt)("strong",{parentName:"p"},(0,s.kt)("em",{parentName:"strong"},"Each namespace has its own event handlers, rooms and middlewares")),". "),(0,s.kt)("p",null,(0,s.kt)("strong",{parentName:"p"},"Rooms")," are subdivisions of namespaces that can be created by the server. This allows you to broadcast data to a subset of related sockets."),(0,s.kt)("p",null,"For example, let's say you have a chat application with different topics. You can create one namespace per topic, and then create rooms within each namespace for different subtopics or groups. Here is a possible code snippet:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"//server.js\nvar io = require('socket.io')(3000);\n\n// create a namespace for sports\nvar sports = io.of('/sports');\n\n// handle connection events for sports namespace\nsports.on('connection', function(socket) {\n  console.log('a user connected to sports');\n  // join a room for soccer fans\n  socket.join('soccer');\n  // send a message to the soccer room\n  sports.to('soccer').emit('message', 'Hello soccer fans!');\n  // handle chat messages from clients\n  socket.on('chat', function(data) {\n    // broadcast the message to the same room\n    sports.to(data.room).emit('message', data.message);\n  });\n});\n\n// create a namespace for movies\nvar movies = io.of('/movies');\n\n// handle connection events for movies namespace\nmovies.on('connection', function(socket) {\n  console.log('a user connected to movies');\n  // join a room for comedy fans\n  socket.join('comedy');\n  // send a message to the comedy room\n  movies.to('comedy').emit('message', 'Hello comedy fans!');\n  // handle chat messages from clients\n  socket.on('chat', function(data) {\n    // broadcast the message to the same room\n    movies.to(data.room).emit('message', data.message);\n  });\n});\n")),(0,s.kt)("p",null,"On the client side, you need to connect to the specific namespace and room you want to join. For example:"),(0,s.kt)("pre",null,(0,s.kt)("code",{parentName:"pre",className:"language-javascript"},"//client.js\n// connect to the sports namespace\nvar sports = io('/sports');\n\n// listen for messages from the server\nsports.on('message', function(data) {\n  console.log(data);\n});\n// send a chat message to the soccer room\nsports.emit('chat', {room: 'soccer', message: 'I love soccer!'});\n\n// connect to the movies namespace\nvar movies = io('/movies');\n// listen for messages from the server\nmovies.on('message', function(data) {\n  console.log(data);\n});\n// send a chat message to the comedy room\nmovies.emit('chat', {room: 'comedy', message: 'I love comedy!'});\n"))))}d.isMDXComponent=!0},5173:function(e,t,o){o.r(t),o.d(t,{assets:function(){return l},contentTitle:function(){return c},default:function(){return k},frontMatter:function(){return i},metadata:function(){return m},toc:function(){return p}});var n=o(3117),s=(o(7294),o(3905)),r=(o(4312),o(4932)),a=o(5773);const i={sidebar_position:3,id:"socketio-zero-to-hero",sidebar_label:"Socket.IO Zero To Hero",title:"Socket.IO Zero To Hero",tags:["Socket.Io Interviews"]},c="Socket.IO From Zero To Hero",m={unversionedId:"socketio/socketio-zero-to-hero",id:"socketio/socketio-zero-to-hero",title:"Socket.IO Zero To Hero",description:"\x3c!--",source:"@site/docs/socketio/intro.md",sourceDirName:"socketio",slug:"/socketio/socketio-zero-to-hero",permalink:"/devviews/interviews/socketio/socketio-zero-to-hero",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/socketio/intro.md",tags:[{label:"Socket.Io Interviews",permalink:"/devviews/interviews/tags/socket-io-interviews"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"socketio-zero-to-hero",sidebar_label:"Socket.IO Zero To Hero",title:"Socket.IO Zero To Hero",tags:["Socket.Io Interviews"]},sidebar:"socketioInterviewSidebar",previous:{title:"Namespace and Rooms",permalink:"/devviews/interviews/socketio/hero/namespaces-rooms"}},l={},p=[{value:"Socket.IO How Itr Works",id:"socketio-how-itr-works",level:3},{value:"Namespaces Rooms",id:"namespaces-rooms",level:3}],d={toc:p},u="wrapper";function k(e){let{components:t,...o}=e;return(0,s.kt)(u,(0,n.Z)({},d,o,{components:t,mdxType:"MDXLayout"}),(0,s.kt)("h1",{id:"socketio-from-zero-to-hero"},"Socket.IO From Zero To Hero"),(0,s.kt)("h2",{id:""}),(0,s.kt)("h3",{id:"socketio-how-itr-works"},"Socket.IO How Itr Works"),(0,s.kt)(r.default,{mdxType:"Howitworks"}),(0,s.kt)("h3",{id:"namespaces-rooms"},"Namespaces Rooms"),(0,s.kt)(a.default,{mdxType:"NamespacesRooms"}))}k.isMDXComponent=!0},3126:function(e,t,o){t.Z=o.p+"assets/images/howitworks-f6c5bed4af42026ff12f6a16574a300b.png"},8716:function(e,t,o){t.Z=o.p+"assets/images/namespace-rooms-29fe140c1549c52e50fdfac8b015f5a1.png"}}]);