"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[962],{3905:function(e,r,t){t.d(r,{Zo:function(){return p},kt:function(){return m}});var n=t(67294);function i(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){i(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,i=function(e,r){if(null==e)return{};var t,n,i={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(i[t]=e[t]);return i}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(i[t]=e[t])}return i}var l=n.createContext({}),d=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):o(o({},r),e)),t},p=function(e){var r=d(e.components);return n.createElement(l.Provider,{value:r},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},v=n.forwardRef((function(e,r){var t=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),u=d(t),v=i,m=u["".concat(l,".").concat(v)]||u[v]||c[v]||a;return t?n.createElement(m,o(o({ref:r},p),{},{components:t})):n.createElement(m,o({ref:r},p))}));function m(e,r){var t=arguments,i=r&&r.mdxType;if("string"==typeof e||i){var a=t.length,o=new Array(a);o[0]=v;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[u]="string"==typeof e?e:i,o[1]=s;for(var d=2;d<a;d++)o[d]=t[d];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}v.displayName="MDXCreateElement"},3544:function(e,r,t){t.r(r),t.d(r,{assets:function(){return l},contentTitle:function(){return o},default:function(){return c},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return d}});var n=t(83117),i=(t(67294),t(3905));const a={sidebar_position:1e3,sidebar_label:"ProvidedIn vs Providers",title:"ProvidedIn vs Providers In Angular?",slug:"/providedin-vs-providers-angular",tags:["Middle Angular Interviews"]},o=void 0,s={unversionedId:"js/angular-interviews/middle/providedIn-vs-providers",id:"js/angular-interviews/middle/providedIn-vs-providers",title:"ProvidedIn vs Providers In Angular?",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/js/angular-interviews/middle/providedIn-vs-providers.md",sourceDirName:"js/angular-interviews/middle",slug:"/providedin-vs-providers-angular",permalink:"/devviews/interviews/providedin-vs-providers-angular",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/js/angular-interviews/middle/providedIn-vs-providers.md",tags:[{label:"Middle Angular Interviews",permalink:"/devviews/interviews/tags/middle-angular-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"ProvidedIn vs Providers",title:"ProvidedIn vs Providers In Angular?",slug:"/providedin-vs-providers-angular",tags:["Middle Angular Interviews"]},sidebar:"jsInterviewSidebar",previous:{title:"Angular Pipe",permalink:"/devviews/interviews/pipe-angular-example"},next:{title:"Route Guards",permalink:"/devviews/interviews/many-types-route-guards-angular"}},l={},d=[],p={toc:d},u="wrapper";function c(e){let{components:r,...t}=e;return(0,i.kt)(u,(0,n.Z)({},p,t,{components:r,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Question:",type:"quest"},(0,i.kt)("p",{parentName:"admonition"},"*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nCould you tell the difference between ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"injectable.providedIn"))," vs ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"module.providers"))," In Angular?")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h5",null,"ANSWER:")),(0,i.kt)("p",null,"  ","*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," : "),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"providers"),": are services provided by a module to injectors (such as, components or other services). And it's ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"not Tree-shakeable"))," (see ",(0,i.kt)("a",{parentName:"li",href:"https://webpack.js.org/guides/tree-shaking/"},"webpack tree-shaking"),") which means if the service is not used it won't get shaken out -> your app contains unsed code.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"@NgModule({\n  // provide services to child modules\n  providers: [\n    CertainService\n  ]\n})\nclass AppModule {}\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("strong",{parentName:"li"},"providedIn"),": Is ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"Tree-shakeable providers"))," - a service can ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"provide himself"))," to a specific injector and is ",(0,i.kt)("strong",{parentName:"li"},(0,i.kt)("em",{parentName:"strong"},"tree-shakeable")),". That means if the service is not used it will get shaken out to get your application smaller and faster.",(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-ts"},"@Injectable({\n  // provide himself no need module provides\n  providedIn: 'root'\n})\nclass CertainService {}\n"))))))}c.isMDXComponent=!0}}]);