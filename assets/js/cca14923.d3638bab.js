"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[8649],{3905:function(e,n,t){t.d(n,{Zo:function(){return c},kt:function(){return f}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function o(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var p=r.createContext({}),l=function(e){var n=r.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},c=function(e){var n=l(e.components);return r.createElement(p.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,p=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(f,s(s({ref:n},c),{},{components:t})):r.createElement(f,s({ref:n},c))}));function f(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var o={};for(var p in n)hasOwnProperty.call(n,p)&&(o[p]=n[p]);o.originalType=e,o[u]="string"==typeof e?e:a,s[1]=o;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},849:function(e,n,t){t.r(n),t.d(n,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return l}});var r=t(3117),a=(t(7294),t(3905));const i={sidebar_position:1e3,sidebar_label:"Final vs Constant In PHP",title:"Final vs Constant In PHP",slug:"/final-vs-constant-in-php",tags:["Basic PHP Interviews"]},s=void 0,o={unversionedId:"php/basic/final-vs-constant",id:"php/basic/final-vs-constant",title:"Final vs Constant In PHP",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/php/basic/final-vs-constant.md",sourceDirName:"php/basic",slug:"/final-vs-constant-in-php",permalink:"/devviews/interviews/final-vs-constant-in-php",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/php/basic/final-vs-constant.md",tags:[{label:"Basic PHP Interviews",permalink:"/devviews/interviews/tags/basic-php-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Final vs Constant In PHP",title:"Final vs Constant In PHP",slug:"/final-vs-constant-in-php",tags:["Basic PHP Interviews"]},sidebar:"phpInterviewSidebar",previous:{title:"Error Suppress In PHP",permalink:"/devviews/interviews/error-suppress-in-php"},next:{title:"Reference Variables In PHP",permalink:"/devviews/interviews/reference-variables-in-php"}},p={},l=[],c={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Question:",type:"quest"},(0,a.kt)("p",{parentName:"admonition"},"*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\n",(0,a.kt)("inlineCode",{parentName:"p"},"final")," vs ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," in PHP?")),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h5",null,"ANSWER:")),(0,a.kt)("p",null,"  ","*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\nIn PHP, both ",(0,a.kt)("inlineCode",{parentName:"p"},"final")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," (short for constant) can be used to define constants within a class, but they have different purposes and use cases."),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"final"),": When applied to a class, it means that ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"no other class can inherit"))," from it and extend its behavior. When applied to a method, it means that ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"no subclass can override"))," the method and change its behavior. Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"class BaseClass {\n    public final function myFinalMethod() {\n        // do something\n    }\n}\n\nclass SubClass extends BaseClass {\n    // This would result in an error because `myFinalMethod()` cannot be overridden\n    public function myFinalMethod() { \n        // do something else\n    }\n}\n")),(0,a.kt)("p",null,"On the other hand, ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," is used to define a constant value that ",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"cannot be changed at runtime")),". Constants declared with ",(0,a.kt)("inlineCode",{parentName:"p"},"const")," are always considered public and cannot be redefined or undefined once defined. Here's an example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-php"},"class MyClass {\n    const MY_CONSTANT = 42;\n}\n\n// Accessing the constant using the class name\necho MyClass::MY_CONSTANT; // Outputs 42\n"))))}d.isMDXComponent=!0}}]);