"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[7563],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return m}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},s=Object.keys(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var s=Object.getOwnPropertySymbols(e);for(r=0;r<s.length;r++)n=s[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var o=r.createContext({}),u=function(e){var t=r.useContext(o),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(o.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},v=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,s=e.originalType,o=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),p=u(n),v=a,m=p["".concat(o,".").concat(v)]||p[v]||d[v]||s;return n?r.createElement(m,i(i({ref:t},c),{},{components:n})):r.createElement(m,i({ref:t},c))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var s=n.length,i=new Array(s);i[0]=v;var l={};for(var o in t)hasOwnProperty.call(t,o)&&(l[o]=t[o]);l.originalType=e,l[p]="string"==typeof e?e:a,i[1]=l;for(var u=2;u<s;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}v.displayName="MDXCreateElement"},7946:function(e,t,n){n.r(t),n.d(t,{assets:function(){return o},contentTitle:function(){return i},default:function(){return d},frontMatter:function(){return s},metadata:function(){return l},toc:function(){return u}});var r=n(83117),a=(n(67294),n(3905));const s={sidebar_position:1e3,sidebar_label:"useClass vs useValue vs useFactory",title:"Difference between useClass vs useValue vs useFactory providers In Angular?",slug:"/useclass-vs-usevalue-vs-usefactory-providers",tags:["Middle Angular Interviews"]},i=void 0,l={unversionedId:"js/angular-interviews/middle/useClass-useValue-useFactory",id:"js/angular-interviews/middle/useClass-useValue-useFactory",title:"Difference between useClass vs useValue vs useFactory providers In Angular?",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/js/angular-interviews/middle/useClass-useValue-useFactory.md",sourceDirName:"js/angular-interviews/middle",slug:"/useclass-vs-usevalue-vs-usefactory-providers",permalink:"/devviews/interviews/useclass-vs-usevalue-vs-usefactory-providers",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/js/angular-interviews/middle/useClass-useValue-useFactory.md",tags:[{label:"Middle Angular Interviews",permalink:"/devviews/interviews/tags/middle-angular-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"useClass vs useValue vs useFactory",title:"Difference between useClass vs useValue vs useFactory providers In Angular?",slug:"/useclass-vs-usevalue-vs-usefactory-providers",tags:["Middle Angular Interviews"]},sidebar:"jsInterviewSidebar",previous:{title:"Route Guards",permalink:"/devviews/interviews/many-types-route-guards-angular"},next:{title:"Angular Interviews",permalink:"/devviews/interviews/angular-interview-questions-answers"}},o={},u=[],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Question:",type:"quest"},(0,a.kt)("p",{parentName:"admonition"},"*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nWhat is the difference between ",(0,a.kt)("inlineCode",{parentName:"p"},"useClass")," vs ",(0,a.kt)("inlineCode",{parentName:"p"},"useValue")," vs ",(0,a.kt)("inlineCode",{parentName:"p"},"useFactory")," providers In Angular?")),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h5",null,"ANSWER:")),(0,a.kt)("p",null,"  ","*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," : "),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"useClass")),": Inject instance of declared service instead of instance of curent service class."),(0,a.kt)("p",{parentName:"li"},"Example: by default, the instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"TestService")," below will be injected, but if you declare ",(0,a.kt)("inlineCode",{parentName:"p"},"useClass"),", the instance of ",(0,a.kt)("inlineCode",{parentName:"p"},"OtherTestService")," will be injected insteads."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Injectable({\n  providedIn: SomeModule,\n  useClass: OtherTestService\n})\nclass TestService {}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"useFactory")),": Inject services based on some cases decided by factory function."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"// a factory (a function) decides which service will be injected insteaad of instance of TestService.\nexport function xyzFactory(http?: HttpClient) {\n  return new OtherTestService();\n}\n\n@Injectable({\n  providedIn: SomeModule,\n  useFactory: xyzFactory,\n  deps: [HttpClient], // arguments of factory, this is optional\n})\nclass TestService {}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"useValue")),": Inject a declared value."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Injectable({\n  providedIn: SomeModule,\n  // Inject this value (which is an object) instead of instance of TestService\n  useValue: {\n    sayhi: function() {}\n  },\n})\nclass TestService {}\n"))),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("p",{parentName:"li"},(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"useExisting")),": is like an alias for an already registered provider."),(0,a.kt)("pre",{parentName:"li"},(0,a.kt)("code",{parentName:"pre",className:"language-ts"},"@Injectable({\n  providedIn: SomeModule,\n  // Inject OtherTestService which is registered in parent module's providers\n  useExisting: OtherTestService,\n})\nclass TestService {}\n"))))))}d.isMDXComponent=!0}}]);