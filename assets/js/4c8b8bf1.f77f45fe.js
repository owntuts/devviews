"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[3324],{3905:function(t,e,n){n.d(e,{Zo:function(){return l},kt:function(){return f}});var a=n(67294);function r(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function i(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,a)}return n}function o(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?i(Object(n),!0).forEach((function(e){r(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function s(t,e){if(null==t)return{};var n,a,r=function(t,e){if(null==t)return{};var n,a,r={},i=Object.keys(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||(r[n]=t[n]);return r}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)n=i[a],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(r[n]=t[n])}return r}var p=a.createContext({}),c=function(t){var e=a.useContext(p),n=e;return t&&(n="function"==typeof t?t(e):o(o({},e),t)),n},l=function(t){var e=c(t.components);return a.createElement(p.Provider,{value:e},t.children)},u="mdxType",d={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},m=a.forwardRef((function(t,e){var n=t.components,r=t.mdxType,i=t.originalType,p=t.parentName,l=s(t,["components","mdxType","originalType","parentName"]),u=c(n),m=r,f=u["".concat(p,".").concat(m)]||u[m]||d[m]||i;return n?a.createElement(f,o(o({ref:e},l),{},{components:n})):a.createElement(f,o({ref:e},l))}));function f(t,e){var n=arguments,r=e&&e.mdxType;if("string"==typeof t||r){var i=n.length,o=new Array(i);o[0]=m;var s={};for(var p in e)hasOwnProperty.call(e,p)&&(s[p]=e[p]);s.originalType=t,s[u]="string"==typeof t?t:r,o[1]=s;for(var c=2;c<i;c++)o[c]=n[c];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},94846:function(t,e,n){n.r(e),n.d(e,{assets:function(){return p},contentTitle:function(){return o},default:function(){return d},frontMatter:function(){return i},metadata:function(){return s},toc:function(){return c}});var a=n(83117),r=(n(67294),n(3905));const i={sidebar_position:1e3,sidebar_label:"Data Fetching",title:"Data Fetching Methods in NextJS",slug:"/data-fetching-methods-nextjs",tags:["NextJS Interviews"]},o=void 0,s={unversionedId:"js/nextjs/basic/data-fetching",id:"js/nextjs/basic/data-fetching",title:"Data Fetching Methods in NextJS",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/js/nextjs/basic/data-fetching.md",sourceDirName:"js/nextjs/basic",slug:"/data-fetching-methods-nextjs",permalink:"/devviews/interviews/data-fetching-methods-nextjs",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/js/nextjs/basic/data-fetching.md",tags:[{label:"NextJS Interviews",permalink:"/devviews/interviews/tags/next-js-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Data Fetching",title:"Data Fetching Methods in NextJS",slug:"/data-fetching-methods-nextjs",tags:["NextJS Interviews"]},sidebar:"jsInterviewSidebar",previous:{title:"Get Data On Client Side",permalink:"/devviews/interviews/get-data-client-side-nextjs"},next:{title:"Dynamic Import",permalink:"/devviews/interviews/dynamic-import-vs-react-lazy"}},p={},c=[],l={toc:c},u="wrapper";function d(t){let{components:e,...n}=t;return(0,r.kt)(u,(0,a.Z)({},l,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Question:",type:"quest"},(0,r.kt)("p",{parentName:"admonition"},"*",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nWhat is ",(0,r.kt)("strong",{parentName:"p"},"Data Fetching Methods")," in NextJS? Please explain about them?")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h5",null,"ANSWER:")),(0,r.kt)("p",null,"  ","*",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\n",(0,r.kt)("strong",{parentName:"p"},"Data Fetching Methods")," are unique functions in Next.js you can use to fetch data for pre-rendering."),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"getStaticProps"))," (Static Generation): Fetch data at build time."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:'{1,11} title="/pages/post.js"',"{1,11}":!0,title:'"/pages/post.js"'},"const Post = ({ data }) => {\n  return <div>{data}</div>\n}\n\nexport async function getStaticProps() {\n  const res = await fetch('https://.../posts')\n  const data = await res.json()\n\n  return {\n    // pass data down to Post via props\n    props: {\n      data,\n    },\n  }\n}\nexport default Blog;\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"getStaticPaths"))," (Static Generation): In case of dynamic routing (- routing depends on param), you use ",(0,r.kt)("inlineCode",{parentName:"p"},"getStaticProps")," to fetch data, you won't know which page/route to fetch data to because it's dynamic. So, to let ",(0,r.kt)("inlineCode",{parentName:"p"},"getStaticProps")," know which page to fetch data to, you need ",(0,r.kt)("inlineCode",{parentName:"p"},"getStaticPaths"),"."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-js",metastring:"{7,15}","{7,15}":!0},"function Post({ post }) {\n  // Render post...\n}\n\nexport async function getStaticPaths() {\n  const paths = [\n    { params: { id: 1 }},\n    { params: { id: 2 }}\n  ]\n  // Pass paths params to getStaticProps\n  // { fallback: false } means other routes (not in the params list above) should 404.\n  return { paths, fallback: false }\n}\n\nexport async function getStaticProps({ params }) {\n  const res = await fetch(`https://.../posts/${params.id}`)\n  const post = await res.json()\n\n  // Pass post data to the page via props\n  return { props: { post } }\n}\n\nexport default Post\n"))),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"getServerSideProps"))," (Server-side Rendering): Fetch data on each request."),(0,r.kt)("pre",{parentName:"li"},(0,r.kt)("code",{parentName:"pre",className:"language-jsx"},"function Page({ data }) {\n  // Render data...\n}\n\n// This gets called on every request\nexport async function getServerSideProps() {\n  const res = await fetch(`https://.../data`)\n  const data = await res.json()\n\n  // Pass data to the page via props\n  return { props: { data } }\n}\n\nexport default Page\n"))))))}d.isMDXComponent=!0}}]);