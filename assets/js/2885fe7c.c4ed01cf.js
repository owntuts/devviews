"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[2367],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return v}});var r=n(67294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var s=r.createContext({}),u=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=u(e.components);return r.createElement(s.Provider,{value:t},e.children)},d="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},c=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),d=u(n),c=i,v=d["".concat(s,".").concat(c)]||d[c]||m[c]||a;return n?r.createElement(v,o(o({ref:t},p),{},{components:n})):r.createElement(v,o({ref:t},p))}));function v(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l[d]="string"==typeof e?e:i,o[1]=l;for(var u=2;u<a;u++)o[u]=n[u];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}c.displayName="MDXCreateElement"},51263:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return a},metadata:function(){return l},toc:function(){return u}});var r=n(83117),i=(n(67294),n(3905));const a={sidebar_position:1e3,sidebar_label:"Multi Provider",title:"What Is Multi Provider In Angular?",slug:"/multi-provider-angular",tags:["Middle Angular Interviews"]},o=void 0,l={unversionedId:"js/angular-interviews/middle/multi-provider",id:"js/angular-interviews/middle/multi-provider",title:"What Is Multi Provider In Angular?",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/js/angular-interviews/middle/multi-provider.md",sourceDirName:"js/angular-interviews/middle",slug:"/multi-provider-angular",permalink:"/devviews/interviews/multi-provider-angular",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/js/angular-interviews/middle/multi-provider.md",tags:[{label:"Middle Angular Interviews",permalink:"/devviews/interviews/tags/middle-angular-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Multi Provider",title:"What Is Multi Provider In Angular?",slug:"/multi-provider-angular",tags:["Middle Angular Interviews"]},sidebar:"jsInterviewSidebar",previous:{title:"Multi Provider",permalink:"/devviews/interviews/eager-loading-vs-lazy-loading-vs-pre-loading-angular"},next:{title:"Angular Pipe",permalink:"/devviews/interviews/pipe-angular-example"}},s={},u=[{value:"Let&#39;s Look At This Example for More Details",id:"lets-look-at-this-example-for-more-details",level:3}],p={toc:u},d="wrapper";function m(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Question:",type:"quest"},(0,i.kt)("p",{parentName:"admonition"},"*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nCould you please explain what Is ",(0,i.kt)("strong",{parentName:"p"},"Multi Provider")," In Angular?")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h5",null,"ANSWER:")),(0,i.kt)("p",null,"  ","*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\n",(0,i.kt)("strong",{parentName:"p"},"Multiple Provider")," is Angular provider that allows you to provide ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"multiple values"))," for a ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"single token"))," in DI. And Angular will call each of them (in the sequence they were provided) and waits for the returned Promise."),(0,i.kt)("h3",{id:"lets-look-at-this-example-for-more-details"},"Let's Look At This Example for More Details"),(0,i.kt)("p",null,"In the example below, app module provide with multiple values ",(0,i.kt)("inlineCode",{parentName:"p"},"new FirstThing()")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"new SecondThing()")," in a single token ",(0,i.kt)("inlineCode",{parentName:"p"},"THING"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{5,10} title="app.module.ts"',"{5,10}":!0,title:'"app.module.ts"'},"@NgModule({\n  declarations: [AppComponent],\n  providers: [{\n      provide: THING,\n      useValue: new FirstThing(),\n      multi: true,\n    },\n    {\n      provide: THING,\n      useValue: new SecondThing(),\n      multi: true,\n    }]\n})\n\n")),(0,i.kt)("p",null,"Then, we can inject the provider ",(0,i.kt)("inlineCode",{parentName:"p"},"THING")," in component and Angular will resolve it as an array."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-ts",metastring:'{3} title="app.component.ts"',"{3}":!0,title:'"app.component.ts"'},"export class AppComponent {\n  constructor(\n    @Inject(THING) things: Array<Thing>\n  ) {\n    console.log(things.map(t => t.someValue));\n  }\n}\n"))))}m.isMDXComponent=!0}}]);