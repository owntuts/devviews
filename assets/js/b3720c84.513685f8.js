"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[9330],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return y}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var p=a.createContext({}),s=function(e){var t=a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return a.createElement(p.Provider,{value:t},e.children)},c="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,p=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),c=s(n),d=r,y=c["".concat(p,".").concat(d)]||c[d]||m[d]||i;return n?a.createElement(y,o(o({ref:t},u),{},{components:n})):a.createElement(y,o({ref:t},u))}));function y(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var l={};for(var p in t)hasOwnProperty.call(t,p)&&(l[p]=t[p]);l.originalType=e,l[c]="string"==typeof e?e:r,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},1971:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return o},default:function(){return m},frontMatter:function(){return i},metadata:function(){return l},toc:function(){return s}});var a=n(3117),r=(n(7294),n(3905));const i={sidebar_position:1e3,sidebar_label:"associateBy vs groupBy in Kotlin",title:"associateBy vs groupBy in Kotlin",slug:"/associateBy-vs-groupBy",tags:["Basic Kotlin Interviews"]},o=void 0,l={unversionedId:"kotlin/basic/associateBy-vs-groupBy",id:"kotlin/basic/associateBy-vs-groupBy",title:"associateBy vs groupBy in Kotlin",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/kotlin/basic/associateBy-vs-groupBy.md",sourceDirName:"kotlin/basic",slug:"/associateBy-vs-groupBy",permalink:"/devviews/interviews/associateBy-vs-groupBy",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/kotlin/basic/associateBy-vs-groupBy.md",tags:[{label:"Basic Kotlin Interviews",permalink:"/devviews/interviews/tags/basic-kotlin-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"associateBy vs groupBy in Kotlin",title:"associateBy vs groupBy in Kotlin",slug:"/associateBy-vs-groupBy",tags:["Basic Kotlin Interviews"]},sidebar:"kotllinInterviewSidebar",next:{title:"Lambda Function vs Expression Function",permalink:"/devviews/interviews/lambda-vs-expression-function"}},p={},s=[{value:"1. Example of <code>associateBy</code>:",id:"1-example-of-associateby",level:4},{value:"2. Example of <code>groupBy</code>:",id:"2-example-of-groupby",level:4}],u={toc:s},c="wrapper";function m(e){let{components:t,...n}=e;return(0,r.kt)(c,(0,a.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Question:",type:"quest"},(0,r.kt)("p",{parentName:"admonition"},"*",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\n",(0,r.kt)("inlineCode",{parentName:"p"},"associateBy")," vs ",(0,r.kt)("inlineCode",{parentName:"p"},"groupBy")," in Kotlin")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h5",null,"ANSWER:")),(0,r.kt)("p",null,"  ","*",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," : "),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"associateBy")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"groupBy")," are functions in Kotlin that allow you to transform a collection into a map based on some criteria."),(0,r.kt)("p",null,"The differences between ",(0,r.kt)("inlineCode",{parentName:"p"},"associateBy")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"groupBy")),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Function"),(0,r.kt)("th",{parentName:"tr",align:null},"Output"),(0,r.kt)("th",{parentName:"tr",align:null},"Key behavior when duplicates are present"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"associateBy")),(0,r.kt)("td",{parentName:"tr",align:null},"Map"),(0,r.kt)("td",{parentName:"tr",align:null},"Only the last element with the same key is included in the map")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"groupBy")),(0,r.kt)("td",{parentName:"tr",align:null},"Map>"),(0,r.kt)("td",{parentName:"tr",align:null},"All elements with the same key are grouped together in the list")))),(0,r.kt)("h4",{id:"1-example-of-associateby"},"1. Example of ",(0,r.kt)("inlineCode",{parentName:"h4"},"associateBy"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'val list = listOf("apple", "banana", "orange", "papaya", "pineapple")\nval map = list.associateBy { it.first() }\nprint(map)\n// Since there are two words ("papaya" and "pineapple") that start with the letter "a", only the last one ("orange") appears in the resulting map.\n// {a=apple, b=banana, o=orange, p=pineapple}\n\n')),(0,r.kt)("h4",{id:"2-example-of-groupby"},"2. Example of ",(0,r.kt)("inlineCode",{parentName:"h4"},"groupBy"),":"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-kt"},'val list = listOf("apple", "banana", "orange", "papaya", "pineapple")\nval map = list.groupBy { it.first() }\n// Both "papaya" and "pineapple" appear in the resulting map under the key "a".\n// {a=[apple], b=[banana], o=[orange], p=[papaya, pineapple]}\n\n'))))}m.isMDXComponent=!0}}]);