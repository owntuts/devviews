"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[3292],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return g}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=d(n),m=r,g=u["".concat(s,".").concat(m)]||u[m]||c[m]||i;return n?a.createElement(g,l(l({ref:t},p),{},{components:n})):a.createElement(g,l({ref:t},p))}));function g(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,l=new Array(i);l[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[u]="string"==typeof e?e:r,l[1]=o;for(var d=2;d<i;d++)l[d]=n[d];return a.createElement.apply(null,l)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},90938:function(e,t,n){n.r(t),n.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return c},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return d}});var a=n(83117),r=(n(67294),n(3905));const i={sidebar_position:1e3,sidebar_label:"Built-in delegates",title:"Built-in delegates In C# (C-Sharp)",slug:"/built-in-delegates-c-sharp",tags:["Basic C# Interviews"]},l=void 0,o={unversionedId:"c-sharp/basic/built-in-delegates",id:"c-sharp/basic/built-in-delegates",title:"Built-in delegates In C# (C-Sharp)",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/c-sharp/basic/built-in-delegates.md",sourceDirName:"c-sharp/basic",slug:"/built-in-delegates-c-sharp",permalink:"/devviews/interviews/built-in-delegates-c-sharp",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/c-sharp/basic/built-in-delegates.md",tags:[{label:"Basic C# Interviews",permalink:"/devviews/interviews/tags/basic-c-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Built-in delegates",title:"Built-in delegates In C# (C-Sharp)",slug:"/built-in-delegates-c-sharp",tags:["Basic C# Interviews"]},sidebar:"cSharpInterviewSidebar",previous:{title:"Boxing vs Unboxing",permalink:"/devviews/interviews/differences-boxing-vs-unboxing-c-sharp"},next:{title:"class vs struct vs record",permalink:"/devviews/interviews/class-struct-record"}},s={},d=[],p={toc:d},u="wrapper";function c(e){let{components:t,...n}=e;return(0,r.kt)(u,(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("admonition",{title:"Question:",type:"quest"},(0,r.kt)("p",{parentName:"admonition"},"*",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nBuilt-in delegates in C#?")),(0,r.kt)("details",null,(0,r.kt)("summary",null,(0,r.kt)("h5",null,"ANSWER:")),(0,r.kt)("p",null,"  ","*",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\nC# has some built-in delegates that make it easy to create and work with delegates. Here are the four built-in delegates in C#:"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Delegate"),(0,r.kt)("th",{parentName:"tr",align:null},"Description"),(0,r.kt)("th",{parentName:"tr",align:null},"Example"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Action")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a method that takes no parameters and returns no value."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'Action printMessage = () => Console.WriteLine("Hello World!");')," This creates an ",(0,r.kt)("inlineCode",{parentName:"td"},"Action")," delegate called ",(0,r.kt)("inlineCode",{parentName:"td"},"printMessage"),' that will print out "Hello World!" when called.')),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Func")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a method that takes one or more parameters and returns a value."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},'Func addAndFormat = (a, b) => $"The sum of {a} and {b} is {a + b}.";')," This creates a ",(0,r.kt)("inlineCode",{parentName:"td"},"Func")," delegate called ",(0,r.kt)("inlineCode",{parentName:"td"},"addAndFormat")," that will take two ",(0,r.kt)("inlineCode",{parentName:"td"},"int")," parameters and return a formatted ",(0,r.kt)("inlineCode",{parentName:"td"},"string")," with their sum.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Predicate")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a method that takes one parameter and returns a boolean value."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"Predicate isEven = (x) => x % 2 == 0;")," This creates a ",(0,r.kt)("inlineCode",{parentName:"td"},"Predicate")," delegate called ",(0,r.kt)("inlineCode",{parentName:"td"},"isEven")," that will return ",(0,r.kt)("inlineCode",{parentName:"td"},"true")," if the input integer is even, and ",(0,r.kt)("inlineCode",{parentName:"td"},"false")," otherwise.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"EventHandler")),(0,r.kt)("td",{parentName:"tr",align:null},"Represents a method that handles an event."),(0,r.kt)("td",{parentName:"tr",align:null},(0,r.kt)("inlineCode",{parentName:"td"},"public event EventHandler MyEvent;")," This creates an ",(0,r.kt)("inlineCode",{parentName:"td"},"event")," that can be subscribed to with an ",(0,r.kt)("inlineCode",{parentName:"td"},"EventHandler")," delegate. When the event is raised, all registered handlers will be called.")))),(0,r.kt)("p",null,":::note\nThere's ",(0,r.kt)("inlineCode",{parentName:"p"},"Action<>")," is another built-in delegate in C# that is similar to ",(0,r.kt)("inlineCode",{parentName:"p"},"Action"),", but allows for methods that take one or more arguments."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-cs"},'Action<int, string> logData = (id, message) => Console.WriteLine($"ID: {id}, Message: {message}");\nlogData(123, "An important message");\n\n')),(0,r.kt)("p",null,":::")))}c.isMDXComponent=!0}}]);