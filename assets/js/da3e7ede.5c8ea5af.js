"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[1460,2750,6917],{3905:function(e,t,n){n.d(t,{Zo:function(){return l},kt:function(){return d}});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var p=r.createContext({}),c=function(e){var t=r.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},l=function(e){var t=c(e.components);return r.createElement(p.Provider,{value:t},e.children)},u="mdxType",v={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,p=e.parentName,l=o(e,["components","mdxType","originalType","parentName"]),u=c(n),m=i,d=u["".concat(p,".").concat(m)]||u[m]||v[m]||a;return n?r.createElement(d,s(s({ref:t},l),{},{components:n})):r.createElement(d,s({ref:t},l))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,s=new Array(a);s[0]=m;var o={};for(var p in t)hasOwnProperty.call(t,p)&&(o[p]=t[p]);o.originalType=e,o[u]="string"==typeof e?e:i,s[1]=o;for(var c=2;c<a;c++)s[c]=n[c];return r.createElement.apply(null,s)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},4312:function(e,t,n){n.d(t,{ZP:function(){return o}});var r=n(3117),i=(n(7294),n(3905));const a={toc:[]},s="wrapper";function o(e){let{components:t,...n}=e;return(0,i.kt)(s,(0,r.Z)({},a,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("div",{className:"interview"},n.level&&(0,i.kt)("span",{className:"level"},n.level),n.children))}o.isMDXComponent=!0},304:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return b},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return v}});var r=n(3117),i=(n(7294),n(3905)),a=n(4312),s=n(9026),o=n(261);const p={sidebar_position:3,id:"c-sharp-interview-questions-answers",sidebar_label:"C# Interviews",title:"C# Interview Questions and Answers",tags:["C# Interviews"]},c=void 0,l={unversionedId:"c-sharp/c-sharp-interview-questions-answers",id:"c-sharp/c-sharp-interview-questions-answers",title:"C# Interview Questions and Answers",description:"Here, we discuss about C# Interview Questions & Answers!",source:"@site/docs/c-sharp/1.c-sharp-interviews.md",sourceDirName:"c-sharp",slug:"/c-sharp/c-sharp-interview-questions-answers",permalink:"/devviews/interviews/c-sharp/c-sharp-interview-questions-answers",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/c-sharp/1.c-sharp-interviews.md",tags:[{label:"C# Interviews",permalink:"/devviews/interviews/tags/c-interviews"}],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,id:"c-sharp-interview-questions-answers",sidebar_label:"C# Interviews",title:"C# Interview Questions and Answers",tags:["C# Interviews"]},sidebar:"cSharpInterviewSidebar",previous:{title:"Boxing vs Unboxing",permalink:"/devviews/interviews/dynamic-type-vs-object-type-variables-c-sharp"},next:{title:"intro",permalink:"/devviews/interviews/c-sharp/intro"}},u={},v=[{value:"Boxing vs Unboxing?",id:"boxing-vs-unboxing",level:2},{value:"Object Type vs Dynamic Type?",id:"object-type-vs-dynamic-type",level:2}],m={toc:v},d="wrapper";function b(e){let{components:t,...n}=e;return(0,i.kt)(d,(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"Here, we discuss about C# Interview Questions & Answers!"),(0,i.kt)("h2",{id:""}),(0,i.kt)(a.ZP,{level:"Junior",mdxType:"Interview"},(0,i.kt)("h2",{id:"boxing-vs-unboxing"},"Boxing vs Unboxing?"),(0,i.kt)(s.default,{mdxType:"BoxingvsUnboxing"})),(0,i.kt)(a.ZP,{level:"Junior",mdxType:"Interview"},(0,i.kt)("h2",{id:"object-type-vs-dynamic-type"},"Object Type vs Dynamic Type?"),(0,i.kt)(o.default,{mdxType:"ObjectvsDynamic"})))}b.isMDXComponent=!0},9026:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return c}});var r=n(3117),i=(n(7294),n(3905));const a={sidebar_position:1e3,sidebar_label:"Boxing vs Unboxing",title:"Differences Between Boxing vs Unboxing In C# (C-Sharp)",slug:"/differences-boxing-vs-unboxing-c-sharp",tags:["Basic C# Interviews"]},s=void 0,o={unversionedId:"c-sharp/basic/boxing-vs-unboxing",id:"c-sharp/basic/boxing-vs-unboxing",title:"Differences Between Boxing vs Unboxing In C# (C-Sharp)",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/c-sharp/basic/boxing-vs-unboxing.md",sourceDirName:"c-sharp/basic",slug:"/differences-boxing-vs-unboxing-c-sharp",permalink:"/devviews/interviews/differences-boxing-vs-unboxing-c-sharp",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/c-sharp/basic/boxing-vs-unboxing.md",tags:[{label:"Basic C# Interviews",permalink:"/devviews/interviews/tags/basic-c-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Boxing vs Unboxing",title:"Differences Between Boxing vs Unboxing In C# (C-Sharp)",slug:"/differences-boxing-vs-unboxing-c-sharp",tags:["Basic C# Interviews"]},sidebar:"cSharpInterviewSidebar",next:{title:"Boxing vs Unboxing",permalink:"/devviews/interviews/dynamic-type-vs-object-type-variables-c-sharp"}},p={},c=[{value:"Performance Caveat",id:"performance-caveat",level:3}],l={toc:c},u="wrapper";function v(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Question:",type:"quest"},(0,i.kt)("p",{parentName:"admonition"},"*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nWhat are Differences between ",(0,i.kt)("strong",{parentName:"p"},"Boxing")," vs ",(0,i.kt)("strong",{parentName:"p"},"Unboxing")," in C#? and caveat when using both?")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h5",null,"ANSWER:")),(0,i.kt)("p",null,"  ","*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\nThere are two types of ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"converting"))," a value of this type to other type. That's ",(0,i.kt)("strong",{parentName:"p"},"Boxing")," & ",(0,i.kt)("strong",{parentName:"p"},"Unboxing"),"."),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Boxing")," means converting a ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"value type"))," to ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"object type"))," or to an ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"interface"))," type by wraping the value inside a ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Object")," instance and stores it on the managed heap."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-csharp"},"int i = 123;\n// boxing i (wrapping i in an object).\nobject o = i;\n"))),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Unboxing"),": is the reverse process that extracts the value type from the object."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"o = 123;\n// unboxing (extracts the value o)\ni = (int)o;  \n")))),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},"Boxing"),(0,i.kt)("th",{parentName:"tr",align:null},"Unboxing"))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Implicit Conversion"),(0,i.kt)("td",{parentName:"tr",align:null},"Explicit Conversion")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Convert Value Type to Reference"),(0,i.kt)("td",{parentName:"tr",align:null},"Convert Reference Type to Value Type")))),(0,i.kt)("h3",{id:"performance-caveat"},"Performance Caveat"),(0,i.kt)("p",null,"Boxing & Unboxing is expensive computationally due to allocating/unallocating & contruction/deconstruction of the object used for Boxing/Unboxing.")))}v.isMDXComponent=!0},261:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return v},frontMatter:function(){return a},metadata:function(){return o},toc:function(){return c}});var r=n(3117),i=(n(7294),n(3905));const a={sidebar_position:1e3,sidebar_label:"Boxing vs Unboxing",title:"Difference Between Dynamic type vs Object type variables In C# (C-Sharp)",slug:"/dynamic-type-vs-object-type-variables-c-sharp",tags:["Basic C# Interviews"]},s=void 0,o={unversionedId:"c-sharp/basic/object-vs-dynamic-type",id:"c-sharp/basic/object-vs-dynamic-type",title:"Difference Between Dynamic type vs Object type variables In C# (C-Sharp)",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/c-sharp/basic/object-vs-dynamic-type.md",sourceDirName:"c-sharp/basic",slug:"/dynamic-type-vs-object-type-variables-c-sharp",permalink:"/devviews/interviews/dynamic-type-vs-object-type-variables-c-sharp",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/c-sharp/basic/object-vs-dynamic-type.md",tags:[{label:"Basic C# Interviews",permalink:"/devviews/interviews/tags/basic-c-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Boxing vs Unboxing",title:"Difference Between Dynamic type vs Object type variables In C# (C-Sharp)",slug:"/dynamic-type-vs-object-type-variables-c-sharp",tags:["Basic C# Interviews"]},sidebar:"cSharpInterviewSidebar",previous:{title:"Boxing vs Unboxing",permalink:"/devviews/interviews/differences-boxing-vs-unboxing-c-sharp"},next:{title:"C# Interviews",permalink:"/devviews/interviews/c-sharp/c-sharp-interview-questions-answers"}},p={},c=[],l={toc:c},u="wrapper";function v(e){let{components:t,...n}=e;return(0,i.kt)(u,(0,r.Z)({},l,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("admonition",{title:"Question:",type:"quest"},(0,i.kt)("p",{parentName:"admonition"},"*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nPlease tell the diference between Between ",(0,i.kt)("strong",{parentName:"p"},"Dynamic type")," vs ",(0,i.kt)("strong",{parentName:"p"},"Object type")," variables In C#?")),(0,i.kt)("details",null,(0,i.kt)("summary",null,(0,i.kt)("h5",null,"ANSWER:")),(0,i.kt)("p",null,"  ","*",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"object type")," is an alias for ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Object")," in .NET. All types in .Net inherit directly or indirectly from ",(0,i.kt)("inlineCode",{parentName:"p"},"System.Object"),". So, you can assign values of any type to variables of type object.  ",(0,i.kt)("u",null,(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"Type checking"))," for object type variables takes place ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"at compile time"))),". ")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("p",{parentName:"li"},(0,i.kt)("strong",{parentName:"p"},"Dynamic types")," are similar to object types. But ",(0,i.kt)("u",null,"dynamic type is not resolved or type checked at compile time"),". ",(0,i.kt)("strong",{parentName:"p"},(0,i.kt)("em",{parentName:"strong"},"At run time")),", dynamic type is converted to object type."),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre",className:"language-cs"},"dynamic dyn = 1;\nobject obj = 1;\ndyn = dyn + 3; // throw error at run time\nobj = obj + 3; // throw error at compile time\n"))))))}v.isMDXComponent=!0}}]);