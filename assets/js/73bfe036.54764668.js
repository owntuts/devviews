"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[9241],{3905:function(e,t,a){a.d(t,{Zo:function(){return u},kt:function(){return c}});var n=a(7294);function r(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function i(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);t&&(n=n.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,n)}return a}function l(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?i(Object(a),!0).forEach((function(t){r(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):i(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function o(e,t){if(null==e)return{};var a,n,r=function(e,t){if(null==e)return{};var a,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||(r[a]=e[a]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)a=i[n],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(r[a]=e[a])}return r}var s=n.createContext({}),p=function(e){var t=n.useContext(s),a=t;return e&&(a="function"==typeof e?e(t):l(l({},t),e)),a},u=function(e){var t=p(e.components);return n.createElement(s.Provider,{value:t},e.children)},k="mdxType",m={inlineCode:"code",wrapper:function(e){var t=e.children;return n.createElement(n.Fragment,{},t)}},d=n.forwardRef((function(e,t){var a=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),k=p(a),d=r,c=k["".concat(s,".").concat(d)]||k[d]||m[d]||i;return a?n.createElement(c,l(l({ref:t},u),{},{components:a})):n.createElement(c,l({ref:t},u))}));function c(e,t){var a=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=a.length,l=new Array(i);l[0]=d;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o[k]="string"==typeof e?e:r,l[1]=o;for(var p=2;p<i;p++)l[p]=a[p];return n.createElement.apply(null,l)}return n.createElement.apply(null,a)}d.displayName="MDXCreateElement"},5008:function(e,t,a){a.r(t),a.d(t,{assets:function(){return s},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return i},metadata:function(){return o},toc:function(){return p}});var n=a(3117),r=(a(7294),a(3905));const i={sidebar_position:1e3,sidebar_label:"Kafka kstream vs ktable",title:"Kafka kstream vs ktable",tags:["Kafka Knowledge"]},l=void 0,o={unversionedId:"kafka/hero/kstreamvsktable",id:"kafka/hero/kstreamvsktable",title:"Kafka kstream vs ktable",description:"kstreamvsktable.md",source:"@site/docs/kafka/hero/kstreamvsktable.md",sourceDirName:"kafka/hero",slug:"/kafka/hero/kstreamvsktable",permalink:"/devviews/interviews/kafka/hero/kstreamvsktable",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/kafka/hero/kstreamvsktable.md",tags:[{label:"Kafka Knowledge",permalink:"/devviews/interviews/tags/kafka-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Kafka kstream vs ktable",title:"Kafka kstream vs ktable",tags:["Kafka Knowledge"]},sidebar:"kafkaInterviewSidebar",previous:{title:"Kafka Implement Cluster",permalink:"/devviews/interviews/kafka/hero/implement-cluster"},next:{title:"Kafka Partition",permalink:"/devviews/interviews/kafka/hero/partition"}},s={},p=[],u={toc:p},k="wrapper";function m(e){let{components:t,...a}=e;return(0,r.kt)(k,(0,n.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("details",{open:!0},(0,r.kt)("summary",null,(0,r.kt)("h5",null,"kstreamvsktable.md")),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"KStream")," is used ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"for processing continuous data streams")),", such as real-time log aggregation, and converts data into a stream of keys and values. KStream supports updating the output with each new message with the same key. However, KStream does ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"not support direct querying")),", as it's meant for processing and forwarding.")),(0,r.kt)("li",{parentName:"ul"},(0,r.kt)("p",{parentName:"li"},(0,r.kt)("strong",{parentName:"p"},"KTable"),", on the other hand, is used for ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"maintaining the latest snapshot of data per key")),", such as aggregating data by key or maintaining a session window. It ",(0,r.kt)("strong",{parentName:"p"},(0,r.kt)("em",{parentName:"strong"},"uses a local state store to enable lookups and joins")),", and stores the latest value per key as change updates. KTable supports direct querying of the latest value per key."))),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},"Feature"),(0,r.kt)("th",{parentName:"tr",align:null},"KStream"),(0,r.kt)("th",{parentName:"tr",align:null},"KTable"))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Data type"),(0,r.kt)("td",{parentName:"tr",align:null},"Stream of keys and values"),(0,r.kt)("td",{parentName:"tr",align:null},"Table of keys and values")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Update semantics"),(0,r.kt)("td",{parentName:"tr",align:null},"Each new message with same key results in updated output"),(0,r.kt)("td",{parentName:"tr",align:null},"Latest value per key will be stored as change updates")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"State store"),(0,r.kt)("td",{parentName:"tr",align:null},"Not possible to leverage state store"),(0,r.kt)("td",{parentName:"tr",align:null},"Uses local state store to enable lookups and joins")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Querying"),(0,r.kt)("td",{parentName:"tr",align:null},"No direct querying \u2013 meant for processing and forwarding"),(0,r.kt)("td",{parentName:"tr",align:null},"Direct querying of the latest value per key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Use case"),(0,r.kt)("td",{parentName:"tr",align:null},"Real-time data processing and event-driven applications"),(0,r.kt)("td",{parentName:"tr",align:null},"Maintaining the latest snapshot of data per key")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"Example"),(0,r.kt)("td",{parentName:"tr",align:null},"Continuous data streams, real-time log aggregation"),(0,r.kt)("td",{parentName:"tr",align:null},"Aggregating data by key, maintaining a session window, etc.")))),(0,r.kt)("p",null,"In summary, KStream is suitable for real-time data processing and event-driven applications, while KTable is used for maintaining the latest snapshot of data per key that can be queried.")))}m.isMDXComponent=!0}}]);