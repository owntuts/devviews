"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[8174],{3905:function(e,n,t){t.d(n,{Zo:function(){return p},kt:function(){return b}});var r=t(7294);function a(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function i(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);n&&(r=r.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,r)}return t}function s(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?i(Object(t),!0).forEach((function(n){a(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,r,a=function(e,n){if(null==e)return{};var t,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||(a[t]=e[t]);return a}(e,n);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)t=i[r],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(a[t]=e[t])}return a}var o=r.createContext({}),l=function(e){var n=r.useContext(o),t=n;return e&&(t="function"==typeof e?e(n):s(s({},n),e)),t},p=function(e){var n=l(e.components);return r.createElement(o.Provider,{value:n},e.children)},u="mdxType",d={inlineCode:"code",wrapper:function(e){var n=e.children;return r.createElement(r.Fragment,{},n)}},m=r.forwardRef((function(e,n){var t=e.components,a=e.mdxType,i=e.originalType,o=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),u=l(t),m=a,b=u["".concat(o,".").concat(m)]||u[m]||d[m]||i;return t?r.createElement(b,s(s({ref:n},p),{},{components:t})):r.createElement(b,s({ref:n},p))}));function b(e,n){var t=arguments,a=n&&n.mdxType;if("string"==typeof e||a){var i=t.length,s=new Array(i);s[0]=m;var c={};for(var o in n)hasOwnProperty.call(n,o)&&(c[o]=n[o]);c.originalType=e,c[u]="string"==typeof e?e:a,s[1]=c;for(var l=2;l<i;l++)s[l]=t[l];return r.createElement.apply(null,s)}return r.createElement.apply(null,t)}m.displayName="MDXCreateElement"},1376:function(e,n,t){t.r(n),t.d(n,{assets:function(){return o},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return l}});var r=t(3117),a=(t(7294),t(3905));const i={sidebar_position:1e3,sidebar_label:"protected internal",title:"protected internal In C# (C-Sharp)",slug:"/protected-internal-c-sharp",tags:["Basic C# Interviews"]},s=void 0,c={unversionedId:"c-sharp/basic/protected-internal",id:"c-sharp/basic/protected-internal",title:"protected internal In C# (C-Sharp)",description:"\\*\u0ca0_\u0ca0\\* :",source:"@site/docs/c-sharp/basic/protected-internal.md",sourceDirName:"c-sharp/basic",slug:"/protected-internal-c-sharp",permalink:"/devviews/interviews/protected-internal-c-sharp",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/c-sharp/basic/protected-internal.md",tags:[{label:"Basic C# Interviews",permalink:"/devviews/interviews/tags/basic-c-interviews"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"protected internal",title:"protected internal In C# (C-Sharp)",slug:"/protected-internal-c-sharp",tags:["Basic C# Interviews"]},sidebar:"cSharpInterviewSidebar",previous:{title:"private protected",permalink:"/devviews/interviews/private-protected-c-sharp"},next:{title:"struct vs class",permalink:"/devviews/interviews/struct-vs-class.md-c-sharp"}},o={},l=[],p={toc:l},u="wrapper";function d(e){let{components:n,...t}=e;return(0,a.kt)(u,(0,r.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("admonition",{title:"Question:",type:"quest"},(0,a.kt)("p",{parentName:"admonition"},"*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u0ca0_\u0ca0")),"*"," :\nExplain ",(0,a.kt)("inlineCode",{parentName:"p"},"protected internal")," in C#?")),(0,a.kt)("details",null,(0,a.kt)("summary",null,(0,a.kt)("h5",null,"ANSWER:")),(0,a.kt)("p",null,"  ","*",(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("inlineCode",{parentName:"strong"},"\u25d4\u032f\u25d4")),"*"," :\nThe ",(0,a.kt)("inlineCode",{parentName:"p"},"protected internal")," access modifier combines the functionalities of ",(0,a.kt)("inlineCode",{parentName:"p"},"protected")," and ",(0,a.kt)("inlineCode",{parentName:"p"},"internal")," access modifiers."),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"protected")," means variable can be used in derived class"),(0,a.kt)("li",{parentName:"ul"},(0,a.kt)("inlineCode",{parentName:"li"},"internal")," means it can be used in the same namespace")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cs"},"namespace MyNamespace\n{\n    public class MyBaseClass\n    {\n        protected internal int number = 42;\n    }\n\n    public class MyDerivedClass : MyBaseClass\n    {\n        public void Access()\n        {\n            var baseObj = new MyBaseClass();\n            baseObj.number = 44; // can modify variable here because it's internal (in the same namespace)\n        }\n    }\n}\n\n// Program.cs\n\nusing MyNamespace;\n\nnamespace MyApp\n{\n    class Program\n    {\n        static void Main(string[] args)\n        {\n            MyBaseClass myBaseClass = new MyBaseClass();\n            myBaseClass.number = 45; // Error, because it's internal (can't be modified outside it's name space)\n\n            MyDerivedClass myDerivedClass = new MyDerivedClass();\n            myDerivedClass.number = 56; // it's ok because it's protected can be modified in derived class\n        }\n    }\n}\n\n"))))}d.isMDXComponent=!0}}]);