"use strict";(self.webpackChunkinterviewdev=self.webpackChunkinterviewdev||[]).push([[8367],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),l=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=l(e.components);return r.createElement(c.Provider,{value:t},e.children)},p="mdxType",f={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),p=l(n),d=o,m=p["".concat(c,".").concat(d)]||p[d]||f[d]||a;return n?r.createElement(m,i(i({ref:t},u),{},{components:n})):r.createElement(m,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s[p]="string"==typeof e?e:o,i[1]=s;for(var l=2;l<a;l++)i[l]=n[l];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},54830:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return i},default:function(){return f},frontMatter:function(){return a},metadata:function(){return s},toc:function(){return l}});var r=n(83117),o=(n(67294),n(3905));const a={sidebar_position:1e3,sidebar_label:"Kubernetes Manifest",title:"Kubernetes Manifest",tags:["Kubernetes Knowledge"]},i=void 0,s={unversionedId:"kubernetes/hero/manifest",id:"kubernetes/hero/manifest",title:"Kubernetes Manifest",description:"Kubernetes Manifest",source:"@site/docs/kubernetes/hero/manifest.md",sourceDirName:"kubernetes/hero",slug:"/kubernetes/hero/manifest",permalink:"/devviews/interviews/kubernetes/hero/manifest",draft:!1,editUrl:"https://github.com/owntuts/devviews/edit/main/docs/kubernetes/hero/manifest.md",tags:[{label:"Kubernetes Knowledge",permalink:"/devviews/interviews/tags/kubernetes-knowledge"}],version:"current",sidebarPosition:1e3,frontMatter:{sidebar_position:1e3,sidebar_label:"Kubernetes Manifest",title:"Kubernetes Manifest",tags:["Kubernetes Knowledge"]},sidebar:"kubernetesInterviewSidebar",previous:{title:"Kubernetes Ingress Models",permalink:"/devviews/interviews/kubernetes/hero/ingress-models"},next:{title:"Kubernetes Resources",permalink:"/devviews/interviews/kubernetes/hero/resources"}},c={},l=[],u={toc:l},p="wrapper";function f(e){let{components:t,...n}=e;return(0,o.kt)(p,(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("details",{open:!0},(0,o.kt)("summary",null,(0,o.kt)("h5",null,"Kubernetes Manifest")),(0,o.kt)("p",null,"A ",(0,o.kt)("strong",{parentName:"p"},"manifest")," in Kubernetes is ",(0,o.kt)("strong",{parentName:"p"},(0,o.kt)("em",{parentName:"strong"},"a file that describes the desired state of a Kubernetes resource or a group of resources")),". A manifest can be written in YAML or JSON format, and it contains the fields and values that define the configuration and behavior of the resource. A manifest can be applied to the cluster using the ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl apply")," command, which creates or updates the resource according to the manifest. A manifest can also be used to delete a resource using the ",(0,o.kt)("inlineCode",{parentName:"p"},"kubectl delete")," command."),(0,o.kt)("p",null,"Examples of deployment manifest resource in Kubernetes:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-yaml",metastring:"{10-19}","{10-19}":!0},"apiVersion: apps/v1\nkind: Deployment\nmetadata: # idetity info of Deployment Resource\n  name: nginx-deployment\nspec: # specification of Deployment\n  replicas: 3 # creates three replicas of nginx pods declared below\n  selector: # select pods that satify the following rules to apply Deployment\n    matchLabels:\n      app: nginx # only match pods have label `app: nginx`\n  template: # pods declaration: describe the desired state of a pod or a set of pods\n    metadata: # idetity info of Pod Resource\n      labels:\n        app: nginx # The label for the pods\n    spec: # specification of Pods\n      containers:\n      - name: nginx # The name of the container\n        image: nginx # The image of the container\n        ports:\n        - containerPort: 80 # The port that the container exposes\n"))))}f.isMDXComponent=!0}}]);